{"version":3,"file":"static/js/main.50d5d2e9.js","mappings":"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","sources":["config.js","utils.js","LoadingScreen.js","CommonStyles.js","ProfilePicture.js","CommonHeader.js","LoginScreen.js","RegisterScreen.js","BoardsScreen.js","ProfileSelectionScreen.js","WordsScreen.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["const config = {\r\n    baseUrl: 'https://diburnik.onrender.com', //  API base URL\r\n    //baseUrl: 'http://192.168.31.184:8000',\r\n    pictogramBaseURL: 'https://api.arasaac.org/v1/pictograms/',\r\n  };\r\n  \r\n  export default config;","import * as ImagePicker from 'expo-image-picker';\r\nimport axios from 'axios';\r\nimport config from './config';\r\nimport * as ImageManipulator from 'expo-image-manipulator';\r\nimport NetInfo from '@react-native-community/netinfo';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as FileSystem from 'expo-file-system';\r\n\r\n\r\nexport const checkOnlineStatus = async () => {\r\n  const state = await NetInfo.fetch();\r\n  return state.isConnected;\r\n};\r\n\r\n\r\nexport const checkLastLogin = async (navigation) => {\r\n  try {\r\n    // Get the last logged-in user's information\r\n\r\n    //const lastLoginInfoString = await AsyncStorage.getItem(`lastLogin_${username}`);\r\n    const lastLoginInfoString = await AsyncStorage.getItem(`lastLogin`);\r\n\r\n    const lastLoginInfo = JSON.parse(lastLoginInfoString);\r\n\r\n    // Get the stored token for the last logged-in user\r\n    //const storedToken = await AsyncStorage.getItem(`authToken_${username}`);\r\n    const storedToken = await AsyncStorage.getItem(`authToken`);\r\n\r\n    // Check if the stored token matches the current user's token\r\n    const isTokenValid = storedToken !== null && storedToken !== undefined;\r\n\r\n    // If we got a login auth token, login to the user matching the token\r\n    if (isTokenValid) {\r\n      // Token is valid, navigate based on user type\r\n      if (lastLoginInfo.userType === 'teacher') {\r\n        navigation.navigate('Profiles', { teacherId: lastLoginInfo.teacherId, child: lastLoginInfo.child });\r\n      } else if (lastLoginInfo.userType === 'child') {\r\n        navigation.navigate('Boards', { profileId: lastLoginInfo.child[0] });\r\n      }\r\n    } else {\r\n      console.log(\"first login\");\r\n      navigation.navigate('Login');\r\n    }\r\n  } catch (error) {\r\n    // Handle errors\r\n    console.error(\"Error checking last login:\", error);\r\n  }\r\n};\r\n\r\n\r\nexport const handleImagePicker = async (setFunc) => {\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      quality: 0.0001,\r\n    });\r\n\r\n    if (!result.canceled) {\r\n\r\n        //console.log(\"result.assets[0]: \",result.assets[0]);\r\n\r\n        setFunc(result.assets[0]);\r\n    }\r\n};\r\n\r\n  export const addAndUploadData = async (formData, newImage, url) => {\r\n    // If you have an image to upload, add it to the form data\r\n    //if (newImage) {\r\n      console.log(\"newImage = \",newImage);\r\n\r\n      if (newImage && newImage.uri !== '') {\r\n        const localUri = newImage.uri;\r\n        \r\n        //Compress image\r\n        const manipResult = await ImageManipulator.manipulateAsync(localUri, [\r\n            { resize: { width: 200 } }, // Adjust the width as needed\r\n          ], {\r\n            compress: 0.01,\r\n            format: ImageManipulator.SaveFormat.PNG,\r\n          });\r\n          \r\n\r\n        const { uri } = manipResult;\r\n\r\n        const filename = uri.split('/').pop();\r\n        const type = `image/${filename.split('.').pop()}`;\r\n        console.log(\"Type of image is: \", type);\r\n\r\n        formData.append('image', {\r\n            uri: uri,\r\n            name: filename,\r\n            type: type,\r\n        });\r\n    }         \r\n\r\n        // Send a POST request with the form data to create a new data\r\n    const response = await axios.post(`${config.baseUrl}/${url}/add`, formData, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n        },\r\n    });\r\n\r\n    return response;\r\n}\r\n\r\nexport const fetchOfflineData = async (key,parentTypeId) => {\r\n  try {\r\n    let res;\r\n    // Load data from AsyncStorage\r\n    res = await AsyncStorage.getItem(`${key}_${parentTypeId}`);\r\n    //console.log(`getting item: ${key}_${parentTypeId}`);\r\n    res = res ? JSON.parse(res) : null; // Parse the JSON if it exists\r\n\r\n\r\n  return res;\r\n  } catch (error) {\r\n    console.log(`Error fetching ${parentTypeId} data:`, error);\r\n  }\r\n};\r\n\r\nexport const fetchOnlineData = async (key,parentTypeId,url,params = null) => {\r\n  try {\r\n    const response = await axios.get(`${config.baseUrl}/${url}`, {\r\n      params,\r\n    });\r\n    const res = response.data;\r\n\r\n    // Save the fetched data to AsyncStorage \r\n    await AsyncStorage.setItem(`${key}_${parentTypeId}`, JSON.stringify(res));\r\n    // console.log(`setting item to: ${key}_${parentTypeId}`);\r\n    return res;\r\n  } catch (error) {\r\n    console.log('Error fetching data from server:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n///////////////////Pictograms ////////////////////\r\nexport const fetchPictogramsIds = async (searchText) => {\r\n  try {\r\n    const response = await axios.get(`${config.pictogramBaseURL}he/search/${encodeURIComponent(searchText)}`); \r\n    const pictogramsIds = response.data.map(item => item._id);\r\n    console.log(\"returning  pictogramsIds = \",pictogramsIds);\r\n    return pictogramsIds || [];\r\n  } catch (error) {\r\n    console.log('Error fetching pictograms:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const pictogramSearch = async (text) => {\r\n  if (text.trim() !== '') {\r\n    try {\r\n      const pictogramIds = await fetchPictogramsIds(text);\r\n      if (pictogramIds.length > 0) {\r\n        const pictograms = pictogramIds.map(id => `${config.pictogramBaseURL}${id}`);\r\n        return pictograms;\r\n      }\r\n      else\r\n        return [];\r\n    } catch (error) {\r\n      console.error('Error handling search:', error);\r\n    }\r\n  }\r\n};\r\n\r\nexport const pictogramPartOfSpeech = async (id) => {\r\n  try {\r\n  const response = await axios.get(`https://api.arasaac.org/v1/pictograms/he/${id}`);\r\n  const { tags } = response.data;\r\n  const partOfSpeechTag = tags.find(tag => ['adjective', 'verb', 'noun'].includes(tag)) || 'noun';      // If no tag is found, return noun\r\n  console.log(`partOfSpeechTag = `,partOfSpeechTag);\r\n  return partOfSpeechTag;\r\n  } catch (error) {\r\n    console.error('Error finding part of speech:', error);\r\n  }\r\n}\r\n\r\nexport const downloadImage = async (imageUrl) => {\r\n  try {\r\n    const { uri } = await FileSystem.downloadAsync(\r\n      imageUrl,\r\n      `${FileSystem.documentDirectory}${Date.now()}.png`\r\n    );\r\n    const fileContent = await FileSystem.readAsStringAsync(uri, { encoding: FileSystem.EncodingType.Base64 });\r\n    return uri;\r\n  } catch (error) {\r\n    console.error('Error downloading image:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteLocalImage = async (imageUri) => {\r\n  if (imageUri && imageUri.startsWith('file://')) {\r\n    try {\r\n      await FileSystem.deleteAsync(imageUri);\r\n      console.log('Local image deleted');\r\n    } catch (error) {\r\n      console.error('Error deleting local image:', error);\r\n    }\r\n  }\r\n};","import React, { useEffect } from 'react';\r\nimport { View, Text, ActivityIndicator } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { checkLastLogin } from './utils';\r\n\r\nconst LoadingScreen = () => {\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    const checkLoginAndNavigate = async () => {\r\n      // Perform any loading tasks or authentication checks here\r\n      await checkLastLogin(navigation);\r\n    };\r\n\r\n    checkLoginAndNavigate();\r\n  }, [navigation]);\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <ActivityIndicator size=\"large\" color=\"#0000ff\" />\r\n      <Text>Loading...</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nexport default LoadingScreen;\r\n","import { StyleSheet } from 'react-native';\r\nimport * as Font from 'expo-font';\r\nimport { RFPercentage, RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nexport const commonStyles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'top',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    backgroundColor: '#b8e7d3',\r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    width: '95%', // Adjust as needed\r\n  },\r\n  bigTitle: {\r\n    paddingTop: 20,\r\n    fontSize: 38, \r\n    color: '#646663',\r\n    marginBottom: 10, \r\n  },\r\n  medTitle: {\r\n    paddingTop: 50,\r\n    fontSize: 30, \r\n    color: '#646663',\r\n    marginBottom: 10, \r\n  },\r\n  goBackButton: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    bottom: 20,\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n  goBackText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginTop: 14,\r\n    flexWrap: 'wrap',\r\n    textAlign: 'left',\r\n  },\r\n  goBackContainer: {\r\n    maxWidth: 63, // Example max width\r\n  },\r\n  topLeft: {\r\n    position: 'absolute',\r\n    top: 100,\r\n    left: 0,\r\n  },\r\n  topCenter: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center' \r\n  },\r\n  bottomRight: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  bottomLeft: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    left: 25,\r\n  },\r\n  exitEditMode: {\r\n    backgroundColor: 'rgba(205, 229, 206, 0.7)',\r\n    alignItems: 'center',\r\n    borderRadius: 80,\r\n    marginBottom: RFValue(65),\r\n    marginRight : RFValue(15),\r\n    borderWidth: RFValue(2),\r\n    borderColor: 'white',\r\n    width: RFValue(85),\r\n    height: RFValue(85),\r\n  },\r\n  buttonsText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    textAlign: 'right',\r\n    flexWrap: 'wrap',\r\n    textAlign: 'center',\r\n  },\r\n  infoText: {\r\n    textAlign :'right',\r\n    fontSize: 20,\r\n  },\r\n  inputField: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width: '50%',\r\n    height: 40,\r\n    borderColor: '#ccc',\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    marginBottom: 30,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: '#ffffff',\r\n    textAlign :'right',\r\n    fontSize: RFValue(14)\r\n  },\r\n  buttonsText: {\r\n    fontSize: RFValue(13),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    textAlign: 'right',\r\n    flexWrap: 'wrap',\r\n    textAlign: 'center',\r\n  },\r\n  saveButton: {\r\n    backgroundColor: '#28A745',\r\n    paddingVertical: 10,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width : RFPercentage(16) ,\r\n    borderRadius: 5,\r\n    flexDirection: 'row', \r\n    alignItems: 'center', \r\n    padding: 10,\r\n    marginTop: 1,\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#2F2F2F',\r\n    marginTop: 14,\r\n    textAlign: 'right',\r\n    flexWrap: 'wrap',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React from 'react';\nimport { View, Image, StyleSheet } from 'react-native';\n\nconst ProfilePicture = ({ source, size }) => {\n  return (\n    <View style={[styles.profileContainer, { width: size, height: size }]}>\n      <Image\n        source={source}\n        style={styles.profilePicture}\n        resizeMode=\"cover\"\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  profileContainer: {\n    borderRadius: 80, // Half of the width/height to create a circle\n    overflow: 'hidden', // Ensure the image stays within the circle\n    borderWidth: 2, // Add white border\n    borderColor: 'white', // Set border color to white\n  },\n  profilePicture: {\n    flex: 1,\n    width: null,\n    height: null,\n  },\n});\n\nexport default ProfilePicture;\n","import React, { useEffect, useState } from 'react';\r\nimport { View, Image, StyleSheet, TouchableOpacity ,Text, FlatList,TouchableWithoutFeedback } from 'react-native';\r\nimport ProfilePicture from './ProfilePicture'; \r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useNavigation } from '@react-navigation/native'; \r\nimport { RFPercentage, RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nconst CommonHeader = ({ showProfilePicture = true, showSettingsIcon = false, handleEdit = null, screenTouched }) => {\r\n\r\n  const [profilePicture, setProfilePicture] = useState('');\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const [lastLoginInfo, setLastLoginInfo] = useState('');\r\n  const [settingsMenuVisible, setSettingsMenuVisible] = useState(false);\r\n  const signOut = 'התנתק';\r\n  const enterEditMode = 'היכנס למצב עריכה';\r\n  const [menuItems, setMenuItems] = useState([`${signOut}`,`${enterEditMode}`]);\r\n  const changeProfile = 'שנה פרופיל';\r\n  const settingsMenuItems = [`${enterEditMode}`];  \r\n  const navigation = useNavigation(); \r\n\r\n\r\n  useEffect(() => {\r\n    const fetchProfilePicture = async () => {\r\n      try {\r\n        if (showProfilePicture) {\r\n          const storedProfilePictureString = await AsyncStorage.getItem('profilePicture');\r\n          const storedProfilePicture = JSON.parse(storedProfilePictureString);\r\n\r\n          // Update the state with the retrieved profile picture\r\n          setProfilePicture(storedProfilePicture || '');\r\n\r\n          // Also fetch last login details\r\n          const lastLoginInfoString = await AsyncStorage.getItem(`lastLogin`);\r\n          const lastLoginInfo = JSON.parse(lastLoginInfoString);\r\n          setLastLoginInfo(lastLoginInfo);\r\n          //console.log(\"Header is fetching profile picture\");\r\n\r\n\r\n          // update the menu based on userType\r\n          if (lastLoginInfo.userType === 'teacher') {\r\n            const set = new Set([...menuItems, changeProfile]);\r\n            setMenuItems(Array.from(set));\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log('Error fetching profile picture:', error);\r\n      }\r\n      handleTouchablePress();       //close the settings menu\r\n    };\r\n    fetchProfilePicture();\r\n  }, [showProfilePicture,screenTouched]); \r\n\r\n\r\n\r\n  const handleSettingsIconPress = () => {\r\n    setMenuVisible(!menuVisible);\r\n    setSettingsMenuVisible(!settingsMenuVisible);\r\n  };\r\n\r\n  const handleMenuItemPress = async (menuItem) => {\r\n    if (menuItem === `${signOut}`) {                  //remove all data when sign out\r\n      const keys = await AsyncStorage.getAllKeys();\r\n      await AsyncStorage.multiRemove(keys);\r\n      //setProfilePicture('');\r\n      navigation.navigate('Login');\r\n    }\r\n\r\n    if (menuItem === `${changeProfile}` && lastLoginInfo.userType === 'teacher') {\r\n        navigation.navigate('Profiles', { teacherId: lastLoginInfo.teacherId, child: lastLoginInfo.child });\r\n    }\r\n    if (menuItem === `${enterEditMode}`) {\r\n      handleEdit(); // Call the toggleEditMode function from props\r\n    }\r\n      // Close the menu\r\n    setMenuVisible(false);\r\n  };\r\n\r\n\r\n\r\n  const renderMenuItem = ({ item }) => (\r\n    <TouchableOpacity\r\n      style={headerStyles.menuItem}\r\n      onPress={() => handleMenuItemPress(item)}\r\n    >\r\n       <Text style={headerStyles.menuItemText}>{item}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n\r\n\r\n  const handleTouchablePress = () => {\r\n    setMenuVisible(false);\r\n    setSettingsMenuVisible(false);\r\n  };\r\n  \r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={handleTouchablePress}>\r\n      <View style={headerStyles.container}>\r\n        {showProfilePicture && (\r\n             <ProfilePicture\r\n             source={{ uri: `data:image/jpeg;base64,${profilePicture}` }}\r\n             size={RFValue(50)}\r\n             style={headerStyles.profilePictureIcon}\r\n           />\r\n            )}\r\n\r\n        {showSettingsIcon && (\r\n          <TouchableOpacity onPress={handleSettingsIconPress}>\r\n                  <Image\r\n                    source={require('./assets/appImages/settings.png')}\r\n                    style={{ width: RFValue(23), height: RFValue(23), marginHorizontal: 20  }}/>\r\n                  </TouchableOpacity>\r\n          )}\r\n\r\n        {menuVisible && (\r\n          <View style={headerStyles.menuContainer}>\r\n            <FlatList\r\n              data={menuItems.slice().reverse()}  // Create a copy and reverse the order\r\n              renderItem={renderMenuItem}\r\n              keyExtractor={(item) => item}\r\n              />\r\n          </View>\r\n        )}\r\n\r\n        <View style={headerStyles.logoContainer}>\r\n          <Image\r\n            source={require('./assets/appImages/logo.png')}\r\n            style={headerStyles.logo}\r\n            resizeMode=\"contain\"\r\n          />\r\n        </View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nconst headerStyles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    height: 120,\r\n    paddingHorizontal: 5,\r\n    marginTop: -10,\r\n  },\r\n  logoContainer: {\r\n    flex: 1,\r\n    alignItems: 'flex-end',\r\n  },\r\n  logo: {\r\n    width: RFValue(150),\r\n    height: RFValue(100),\r\n  },\r\n\r\n  menuItem: {\r\n    paddingVertical: 10,\r\n    alignSelf: 'center', \r\n  },\r\n  menuContainer: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 5,\r\n    elevation: 5,\r\n    marginTop: 5,\r\n    paddingHorizontal: 3,\r\n    height: '95%',\r\n  },\r\n  \r\n  menuItemText: {\r\n    fontSize: 16, \r\n  },\r\n  profilePictureIcon: {\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default CommonHeader;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Image } from 'react-native';\r\n\r\nimport { useNavigation } from '@react-navigation/native'; \r\nimport axios from 'axios';\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport config from './config';\r\nimport NetInfo from '@react-native-community/netinfo';\r\n\r\nimport { commonStyles } from './CommonStyles';\r\nimport CommonHeader from './CommonHeader';\r\n\r\nimport { checkOnlineStatus, checkLastLogin } from './utils';\r\nimport { RFPercentage, RFValue } from \"react-native-responsive-fontsize\";\r\n\r\n\r\n//Define a functional component \r\nconst LoginScreen = () => {\r\n  const [username, setUsername] = useState(''); \r\n  const [password, setPassword] = useState('');\r\n  const [invalidLoginMessage, setInvalidLoginMessage] = useState('');\r\n  const [isOnline, setIsOnline] = useState(false);\r\n\r\n  //The 'useNavigation' hook allows to navigate between screens\r\n  const navigation = useNavigation(); \r\n\r\n  useEffect(() => {\r\n\r\n    checkOnlineStatus().then((status) => {setIsOnline(status);});         //Check online status and keep it updated\r\n\r\n  }, [isOnline]); \r\n\r\n\r\n\r\n  //handleLogin - function that handles the login logic\r\n  const handleLogin = async () => {\r\n    //const isOnline  = NetInfo.fetch().then((state) => state.isConnected);\r\n    checkOnlineStatus().then((status) => {setIsOnline(status);});         //Check online status and keep it updated\r\n\r\n    const user = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    try {\r\n      if(isOnline) {\r\n      const res = await axios.post(`${config.baseUrl}/login`, user);\r\n      const token = res.data.token;\r\n      //await AsyncStorage.setItem(`authToken_${user.username}`, token);  // Store user-specific token\r\n      await AsyncStorage.setItem(`authToken`, token);  // Store user-specific token\r\n\r\n      console.log(`storing the auth token: authToken = `,token);\r\n\r\n      const userResponse = await axios.get(`${config.baseUrl}/user`, {\r\n        params: {\r\n          username: user.username,\r\n        },\r\n      });\r\n\r\n      // Store last login information for remember login\r\n      const lastLoginInfo = {\r\n      userType: userResponse.data.user.userType,\r\n      child: userResponse.data.user.child,\r\n      teacherId: null, // Initialize teacherId to null\r\n      };\r\n      if (lastLoginInfo.userType === 'teacher') {\r\n        const teacherIdResponse = await axios.get(`${config.baseUrl}/findTeacherId?username=${username}`);\r\n        if (teacherIdResponse.status === 200) \r\n          lastLoginInfo.teacherId = teacherIdResponse.data.teacherId;\r\n      }\r\n \r\n      else { \r\n        const profilePicture = userResponse.data.profilePicture;\r\n        // console.log('profilePicture in storage is ', await AsyncStorage.getItem('profilePicture'));\r\n        await AsyncStorage.setItem('profilePicture', JSON.stringify(profilePicture));     //store profile picture \r\n      }\r\n\r\n      //await AsyncStorage.setItem(`lastLogin_${user.username}`, JSON.stringify(lastLoginInfo));\r\n      await AsyncStorage.setItem(`lastLogin`, JSON.stringify(lastLoginInfo));\r\n\r\n  \r\n      // Navigate based on user type\r\n      if (lastLoginInfo.userType === 'teacher') {\r\n        //navigation.navigate('Profiles', { teacherId: lastLoginInfo.teacherId, child: lastLoginInfo.child });\r\n        navigation.navigate('Profiles', { teacherId: lastLoginInfo.teacherId });\r\n\r\n      } else if (lastLoginInfo.userType === 'child') {\r\n        navigation.navigate('Boards', { profileId: lastLoginInfo.child[0] });\r\n      } \r\n      //Delete entered login details\r\n      setUsername('');\r\n      setPassword('');\r\n      \r\n    } else {\r\n      console.log(\"Offline\");\r\n    }\r\n  } catch (error) {\r\n      setInvalidLoginMessage(\"פרטי התחברות לא נכונים\");\r\n      console.log(\"Error during login:\", error);\r\n\r\n      setTimeout(() => {\r\n        setInvalidLoginMessage('');\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <View style={commonStyles.container}>\r\n      {/* CommonHeader - the app logo */}\r\n      <CommonHeader showProfilePicture={false} />\r\n        <Image source={require('./assets/appImages/loginMainPic.png')} style={loginStyles.logoImg} resizeMode=\"contain\" />\r\n\r\n      <TextInput\r\n        style={loginStyles.inputUsername}\r\n        placeholder=\"שם משתמש\"\r\n        value={username} \r\n        onChangeText={(text) => setUsername(text)} \r\n        autoCapitalize=\"none\" \r\n      />\r\n      <TextInput\r\n        style={loginStyles.inputPassword}\r\n        placeholder=\"סיסמה\"\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n        secureTextEntry\r\n      />\r\n      <TouchableOpacity style={loginStyles.button} onPress={handleLogin}>\r\n        <Text style={loginStyles.buttonText}>התחבר</Text>\r\n      </TouchableOpacity>\r\n      {invalidLoginMessage ? (\r\n        <Text style={loginStyles.errorMessage}>{invalidLoginMessage}</Text>\r\n      ) : null}\r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate(\"Register\")}\r\n        style={{ marginTop: 15 }}\r\n      >\r\n        <Text style={{ textAlign: \"center\", color: \"gray\", fontSize: 16 }}>\r\n          עדיין אין לך משתמש?{\" \"}\r\n          <Text style={{ color: \"blue\" }}>הירשם עכשיו</Text>\r\n        </Text>\r\n      </TouchableOpacity>\r\n\r\n       {/* Fixed image at the left-bottom corner */}\r\n       <Image source={require('./assets/appImages/bgLeftFlowers.png')} style={loginStyles.fixedImageLeft} />\r\n\r\n      {/* Fixed image at the right-bottom corner */}\r\n      <Image source={require('./assets/appImages/bgRightFlowers.png')} style={loginStyles.fixedImageRight} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst loginStyles = StyleSheet.create({\r\n  bigTitle: {\r\n    fontSize: 72,\r\n    fontWeight: 'bold',\r\n    marginBottom: 50,\r\n    color: '#fcc1ae',\r\n  },\r\n  inputUsername: { \r\n    width: '50%',\r\n    height: 40,\r\n    borderColor: '#ccc',\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: '#ffffff',\r\n    textAlign: 'left', \r\n  },\r\n  inputPassword: {\r\n    width: '50%',\r\n    height: 40,\r\n    borderColor: '#ccc',\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    marginBottom: 15,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: '#ffffff',\r\n    textAlign: 'left', \r\n\r\n  },\r\n  button: {\r\n    backgroundColor: '#38BAD7',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n    width : '20%',\r\n    marginTop: RFValue(10),\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  errorMessage: {\r\n    color: 'red',\r\n    marginTop: 10,\r\n    textAlign: 'center',\r\n  },\r\n  logoImg: {\r\n    width: 800, \r\n    height:120, \r\n    marginBottom: 10, // Add margin at the bottom to create space\r\n  },\r\n\r\n\r\n  fixedImageLeft: {\r\n    position: 'absolute',\r\n    left: 0, \r\n    bottom: 0, \r\n    width: 120, \r\n    height: 90, \r\n  },\r\n  fixedImageRight: {\r\n    position: 'absolute',\r\n    right: 0, \r\n    bottom: 0, \r\n    width: 200, \r\n    height: 200, \r\n  }\r\n});\r\n\r\n\r\nexport default LoginScreen;\r\n","import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Image, ScrollView } from 'react-native';\r\nimport { CheckBox } from 'react-native-elements';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport axios from 'axios';\r\nimport config from './config';\r\nimport { handleImagePicker, addAndUploadData } from './utils';\r\nimport { commonStyles } from './CommonStyles';\r\nimport CommonHeader from './CommonHeader';\r\nimport { RFPercentage, RFValue } from \"react-native-responsive-fontsize\";\r\n\r\n\r\nconst RegisterScreen = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [userType, setUserType] = useState('');\r\n  const [registrationMessage, setRegistrationMessage] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [newProfileImage, setNewProfileImage] = useState('');\r\n\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const goBack = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  const handleProfileImagePicker = async () => {\r\n    handleImagePicker(setNewProfileImage);\r\n  };\r\n  \r\n\r\n  const handleRegistration = async ()  => {\r\n    if (!username || !password || !email || !userType) {\r\n      setRegistrationMessage(\"יש למלא את כל השדות\");\r\n      return;\r\n    }\r\n\r\n    \r\n\r\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailPattern.test(email)) {\r\n      setRegistrationMessage(\"כתובת מייל לא חוקית\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('username', username);\r\n    formData.append('password', password);\r\n    formData.append('email', email);\r\n    formData.append('userType', userType);\r\n    if (userType === 'child') {\r\n      formData.append('firstName', firstName);\r\n      formData.append('lastName', lastName);\r\n    } else {                                              // Also prevents non related to teacher data to add to the form \r\n      formData.append('firstName', '');\r\n      formData.append('lastName', '');\r\n      setNewProfileImage('');\r\n    }\r\n\r\n\r\n    addAndUploadData(formData, newProfileImage, 'users')\r\n    .then((response) => {\r\n      //console.log(response.message);\r\n      if (response.status === 200) {\r\n        setRegistrationMessage(\"רישום בוצע בהצלחה\");\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n        setEmail(\"\");\r\n        setUserType(\"\");\r\n        setFirstName(\"\");\r\n        setLastName(\"\");\r\n      } else {\r\n        setRegistrationMessage(\"תקלה ברישום\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      if (error.response && error.response.status === 400) {\r\n        setRegistrationMessage(error.response.data.message);\r\n      } else {\r\n        console.error(\"Error during registration:\", error);\r\n        setRegistrationMessage(\"תקלה ברישום\");\r\n      }\r\n    });\r\n    setTimeout(() => setRegistrationMessage(''), 3000); // Clear message after 3 seconds\r\n\r\n  }\r\n\r\n\r\n  const handleCancel = () => {\r\n    // Handle cancellation - reset the form and navigate back\r\n    navigation.navigate(\"Login\");\r\n    setUsername('');\r\n    setPassword('');\r\n    setEmail('');\r\n    setUserType('');\r\n    setFirstName('');\r\n    setLastName('');\r\n    setNewProfileImage('');\r\n    setRegistrationMessage('');\r\n  };\r\n    \r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={registrationStyles.scrollContainer} >\r\n      <CommonHeader showProfilePicture={false} />\r\n      <Text style={registrationStyles.bigTitle}>הרשמה</Text>\r\n      <View style={{paddingRight: RFValue(170) }}>\r\n        <Image\r\n          source={require('./assets/appImages/registrationAvatar.png')}\r\n          style={registrationStyles.registrationLogo}/>\r\n      </View>\r\n      <TextInput\r\n        style={[registrationStyles.inputField, { textAlign: 'right' }]}\r\n        placeholder=\"שם משתמש\"\r\n        value={username}\r\n        onChangeText={(text) => setUsername(text)}\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <TextInput\r\n        style={[registrationStyles.inputField, { textAlign: 'right' }]}\r\n        placeholder=\"סיסמה\"\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n        secureTextEntry\r\n      />\r\n      <TextInput\r\n        style={[registrationStyles.inputField, { textAlign: 'right' }]}\r\n        placeholder=\"אימייל\"\r\n        value={email}\r\n        onChangeText={(text) => setEmail(text)}\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <CheckBox\r\n        title=\"מורה\"\r\n        checked={userType === 'teacher'}\r\n        onPress={() => setUserType('teacher')}\r\n        containerStyle={registrationStyles.checkboxContainer}\r\n      />\r\n      <CheckBox\r\n        title=\"ילד\"\r\n        checked={userType === 'child'}\r\n        onPress={() => setUserType('child')}\r\n        containerStyle={registrationStyles.checkboxContainer}\r\n      />\r\n      {userType === 'child' && (\r\n        <>\r\n          <TextInput\r\n            style={[registrationStyles.inputField, { textAlign: 'right' }]}\r\n            placeholder=\"שם פרטי\"\r\n            value={firstName}\r\n            onChangeText={(text) => setFirstName(text)}\r\n          />\r\n          <TextInput\r\n            style={[registrationStyles.inputField, { textAlign: 'right' }]}\r\n            placeholder=\"שם משפחה\"\r\n            value={lastName}\r\n            onChangeText={(text) => setLastName(text)}\r\n          />on\r\n          <TouchableOpacity onPress={handleProfileImagePicker}>\r\n            <Text style={[registrationStyles.selectProfileImageText, { color: 'blue' }]}>\r\n              בחר תמונת פרופיל\r\n            </Text>\r\n          </TouchableOpacity>\r\n          {newProfileImage && (\r\n            <Image\r\n              source={{ uri: newProfileImage.uri }}\r\n              style={registrationStyles.uploadedImageContainer}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n      <View>\r\n      <TouchableOpacity style={registrationStyles.button} onPress={handleRegistration}>\r\n        <Text style={registrationStyles.buttonText}>הירשם</Text>\r\n      </TouchableOpacity>\r\n      </View>\r\n\r\n       {/*Go Back button*/}\r\n       <View style={[commonStyles.bottomLeft, { bottom: RFValue(50) }]}>\r\n        <TouchableOpacity onPress={() => { goBack(); handleCancel(); }}>\r\n          <Text style={commonStyles.buttonsText}>ביטול</Text>\r\n          <Image\r\n            source={require('./assets/appImages/goBackBtn.png')}\r\n            style={{ width: RFValue(60), height: RFValue(60)}}/>\r\n        </TouchableOpacity>\r\n      </View>\r\n      {/*End of 'Go Back' button*/}\r\n      {registrationMessage ? (\r\n        <Text style={registrationStyles.registrationMessage}>{registrationMessage}</Text>\r\n      ) : null}\r\n      \r\n      <Image\r\n        source={require('./assets/appImages/bgLeftFlowers.png')}\r\n        style={registrationStyles.fixedImageLeft}\r\n      />\r\n      <Image\r\n        source={require('./assets/appImages/bgRightFlowers.png')}\r\n        style={registrationStyles.fixedImageRight}\r\n      />\r\n    </ScrollView>\r\n  );\r\n  \r\n};\r\n\r\n\r\nconst registrationStyles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'top',\r\n    alignItems: 'center',\r\n    padding: 40,\r\n    backgroundColor: '#b8e7d3',\r\n  },\r\n  bigTitle: {\r\n    fontSize: 38, \r\n    color: '#646663',\r\n    marginBottom: 10, \r\n    textAlign: 'center', // Center the text\r\n\r\n  },\r\n  inputField: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width: '50%',\r\n    height: 40,\r\n    borderColor: '#ccc',\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: '#ffffff',\r\n  },\r\n  button: {\r\n    backgroundColor: '#007BFF',\r\n    paddingVertical: 10,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width : '20%' ,\r\n    borderRadius: 5,\r\n    marginTop: RFValue(18),\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  registrationMessage: {\r\n    color: 'green',\r\n    marginTop: 10,\r\n    textAlign: 'center',\r\n  },\r\n  checkboxContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: '50%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    justifyContent: 'center',\r\n  },\r\n  fixedImageLeft: {\r\n    position: 'absolute',\r\n    left: 0, // Adjust the left property to set the distance from the left\r\n    bottom: 0,\r\n    width: 120, // Set the width to your preferred size\r\n    height: 90, // Set the height to your preferred size\r\n  },\r\n  fixedImageRight: {\r\n    position: 'absolute',\r\n    right: 0, // Adjust the right property to set the distance from the right\r\n    bottom: 0, // Adjust the bottom property to set the distance from the bottom\r\n    width: 200, // Set the width to your preferred size\r\n    height: 200, // Set the height to your preferred size\r\n  },\r\n  cancelButton: {\r\n    backgroundColor: 'red',\r\n    marginTop: 10,\r\n    paddingVertical: 10,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width : '20%' ,\r\n    borderRadius: 5,\r\n  },\r\n  cancelButtonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  registrationLogo: {\r\n    width: 120,\r\n    height: 170,\r\n    resizeMode: 'cover',\r\n    position: 'absolute',\r\n    top: '70%',  // Adjust the top position to your preference\r\n    left: '10%',  // Adjust the left position to your preference\r\n    zIndex: 1,  // Ensure the image is above other elements\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n    paddingBottom: 20, \r\n  },\r\n  selectProfileImageText: {\r\n    color: 'blue',\r\n    textAlign: 'center',\r\n    fontSize: 16,\r\n    marginTop: 10, // Adjust the marginTop as needed\r\n  },\r\n  uploadedImageContainer: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    marginBottom: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nexport default RegisterScreen;","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Modal, TextInput, Button, StyleSheet ,Image, ActivityIndicator,ScrollView, TouchableWithoutFeedback } from 'react-native';\r\nimport axios from 'axios';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Buffer } from 'buffer'; \r\nimport config from './config';\r\nimport { RFPercentage, RFValue } from \"react-native-responsive-fontsize\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nimport { commonStyles } from './CommonStyles';\r\nimport CommonHeader from './CommonHeader';\r\n\r\n\r\nimport { handleImagePicker, addAndUploadData, fetchOfflineData, fetchOnlineData, checkOnlineStatus } from './utils';\r\n\r\nconst BoardsScreen = ({ route }) => {\r\n  const { profileId } = route.params;\r\n  const [boards, setBoards] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [newBoardName, setNewBoardName] = useState('');\r\n  const [newBoardImage, setNewBoardImage] = useState('');\r\n  const navigation = useNavigation();\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isOnline, setIsOnline] = useState(false);\r\n  const [backgroundColor,setBackgroundColor] = useState('');\r\n  const [screenTouched,setScreenTouched] = useState(false);\r\n  const [isEditSingleBoardVisible, setEditSingleBoardVisible] = useState(false);\r\n  const [selectedBoard, setSelectedBoard] = useState('');\r\n  const [temp, setTemp] = useState('');\r\n\r\n  const goBack = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        await fetchBoardsData();\r\n      } catch (error) {\r\n        console.log('Error fetching data for profile:', error);\r\n      }\r\n    })();\r\n  }, [profileId, isOnline]);\r\n \r\n\r\n  const fetchBoardsData = async () => {\r\n    try {\r\n      const offlineData = await fetchOfflineData(`offlineBoards`, `${profileId}`);\r\n      let onlineData;\r\n\r\n      if (offlineData) {\r\n        setLoading(false);\r\n        setBoards(offlineData.boards);\r\n      }\r\n\r\n      checkOnlineStatus().then((status) => {\r\n        setIsOnline(status);\r\n      });\r\n\r\n      if (isOnline) {\r\n        onlineData = await fetchOnlineData(`offlineBoards`, `${profileId}`, `children/${profileId}`);\r\n      }\r\n\r\n      if (onlineData) {\r\n        setLoading(false);\r\n        setBoards(onlineData.boards);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error fetching data for profile:', error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const handleBoardSelect = async (boardId) => {\r\n    if (!editMode) {\r\n      try {\r\n        // Attempt to retrieve data from AsyncStorage\r\n        const storageKey = `offlineNavigation_${boardId}`;\r\n        const offlineData = await AsyncStorage.getItem(storageKey);\r\n        if (offlineData) {\r\n          const { boardId, words } = JSON.parse(offlineData);\r\n          navigation.navigate('Words', { boardId, words });\r\n        } else {\r\n          // Check if there is a network connection\r\n          if (isOnline) {\r\n            // Make the API request\r\n            const response = await axios.get(`${config.baseUrl}/boards/${boardId}`);      \r\n            const updatedWords = response.data.words;\r\n            // Save the parameters to AsyncStorage with a key specific to the board\r\n            const storageKey = `offlineNavigation_${boardId}`;\r\n            await AsyncStorage.setItem(storageKey, JSON.stringify({ boardId, words: updatedWords }));\r\n    \r\n            // Navigate to 'Words' screen\r\n            navigation.navigate('Words', { boardId, words: updatedWords });\r\n          }\r\n        }\r\n        toggleScreenTouched();      // close the settings menu\r\n      } catch (error) {\r\n        console.log('Error fetching updated words:', error);\r\n        }\r\n    } else {\r\n      const updatedBoards = boards.map((board) =>\r\n        board._id === boardId\r\n          ? { ...board, isSelected: !board.isSelected }\r\n          : board\r\n      );\r\n      setBoards(updatedBoards);\r\n      const selectedBoards = updatedBoards.filter((board) => board.isSelected);\r\n      setSelectedBoards(selectedBoards);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleBoardImagePicker = async () => {\r\n    handleImagePicker(setNewBoardImage);\r\n  }\r\n\r\n\r\n  const handleAddBoard = async () => {\r\n    if (newBoardName.trim() !== '') {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('profileId', profileId);\r\n        formData.append('category', newBoardName); \r\n  \r\n        const response = await addAndUploadData(formData, newBoardImage, 'boards');\r\n  \r\n        const newBoard = response.data;\r\n\r\n\r\n        setBoards([...boards, newBoard]);\r\n        // Clear the modal\r\n        setNewBoardName('');\r\n        setNewBoardImage(''); \r\n        setIsModalVisible(false);\r\n      } catch (error) {\r\n        console.log('Error creating board:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const handleEdit = () => {\r\n    setEditMode(!editMode);\r\n    setBackgroundColor(editMode ? '#b8e7d3' : '#fee5ce');     //changing background color in edit mode\r\n    setSelectedBoards([]); // Clear selected boards when toggling edit mode\r\n\r\n    const updatedBoards = boards.map((board) => ({ ...board, isSelected: false }));\r\n    setBoards(updatedBoards);\r\n  };\r\n\r\n  const handleDeleteBoards = async (boardsIds) => {\r\n    try {\r\n      console.log('boardIds to delete:', boardsIds);\r\n\r\n      const response = await axios.delete(`${config.baseUrl}/deleteBoards`, {\r\n        data: { boardsIds },\r\n      });\r\n      if (response.status === 200) {\r\n        const updatedBoards = boards.filter((board) => !boardsIds.includes(board._id));\r\n        setBoards(updatedBoards);\r\n        setSelectedBoards([]);\r\n\r\n        //Save updated boards to async storage\r\n        await AsyncStorage.setItem(`offlineBoards_${profileId}`,JSON.stringify(updatedBoards) );\r\n\r\n      } else {\r\n        console.error('Error deleting boards. Unexpected response:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting boards:', error);\r\n    }\r\n  };\r\n\r\n\r\n    // update the edited board and save it to the db\r\n    const updateBoardDetails = async () => {\r\n      const formData = new FormData();\r\n      formData.append('_id', selectedBoard._id);\r\n      formData.append('category', selectedBoard.category);\r\n  \r\n      // temp will have the temporary image\r\n      const response = await addAndUploadData(formData,temp,'board/update');\r\n      if (response.status === 200) {\r\n        console.log(\"Board updated successfully\");  \r\n        fetchBoardsData();                      // refresh boards\r\n        toggleEditSingleBoard();                //close the editing menu\r\n      } else {\r\n        console.error('Error saving profile changes', response.status);\r\n        //add a message showing changes error\r\n      }\r\n    }\r\n\r\n\r\n  const handleEditSingleBoard = (boardId) => {\r\n    const selectedBoard = boards.find((board) => board._id === boardId);\r\n    setSelectedBoard(selectedBoard);\r\n    toggleEditSingleBoard();\r\n  };\r\n\r\n  const toggleEditSingleBoard = () => {\r\n     // Clear the modal\r\n    setEditSingleBoardVisible(!isEditSingleBoardVisible);\r\n    setTemp('');\r\n  };\r\n\r\n  //change the edited board's picture\r\n  const handlePenIconPress = async () => {\r\n    await handleImagePicker(setTemp) \r\n    console.log(\"selectedBoard = \",selectedBoard);\r\n  };\r\n\r\n  // changes the selectedProfile category\r\n  const handleCategoryChange = (category) => {\r\n    setSelectedBoard((prevBoard) => ({\r\n      ...prevBoard,\r\n      category: category\r\n    }));\r\n  }\r\n\r\n\r\n\r\n\r\n  const toggleScreenTouched = () => {\r\n    setScreenTouched(!screenTouched);\r\n  }\r\n\r\n\r\n  return (\r\n  <TouchableWithoutFeedback onPress={toggleScreenTouched}>\r\n    <View style={[styles.container, { backgroundColor: backgroundColor }]}>\r\n        {/* CommonHeader - the app logo */}\r\n        <CommonHeader showProfilePicture={true} showSettingsIcon={true} handleEdit={handleEdit} screenTouched={screenTouched}/>\r\n        {editMode && (\r\n        <View style={commonStyles.topLeft}>\r\n             <Image\r\n              source={require('./assets/appImages/editMode1.png')}\r\n              style={{ width: 200, height: 200}}/>\r\n        </View>\r\n      )}\r\n       {editMode && (\r\n        <View style={commonStyles.bottomRight}>\r\n              <Image\r\n              source={require('./assets/appImages/editMode2.png')}\r\n              style={{ width: 300, height: 300}}/>\r\n        </View>\r\n      )}\r\n      {editMode && (\r\n      <View style={commonStyles.topCenter}>\r\n<Image \r\n          source={require('./assets/appImages/editModeIcon.png')}\r\n          style={{ width: 100, height: 100 }}\r\n        />\r\n          </View>\r\n      )}\r\n        <Text style={[commonStyles.bigTitle, { textAlign: 'center' }]}>\r\n        {editMode ? 'ערוך לוחות תקשורת' : 'לוחות התקשורת שלי'}\r\n        </Text>\r\n      <View style={styles.innerContainer}>\r\n      <View style={styles.boardsContainer}>\r\n      <View style={{ alignItems: 'flex-start'}}>\r\n        <View>\r\n        {editMode && (\r\n          /* Blank board for adding a new board */\r\n          <TouchableOpacity\r\n        style={[styles.blankBoard, \r\n          !isOnline && styles.disabledButton]}\r\n        onPress={() => isOnline && setIsModalVisible(true)}>\r\n            <Text style={styles.blankBoardText }>+</Text>\r\n            <Text style={[commonStyles.buttonText, { marginTop: RFValue(30) }]}>הוסף לוח תקשורת חדש</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n        </View>\r\n        {/* Edit Modal */}\r\n        <Modal visible={isEditSingleBoardVisible} animationType=\"slide\" transparent>\r\n        <View style={styles.modalContainer}>\r\n          <Text style={commonStyles.bigTitle}>ערוך לוח</Text>\r\n          <View style={styles.topLeft}>\r\n             <Image\r\n              source={require('./assets/appImages/editMode1.png')}\r\n              style={{ width: 200, height: 200}}/>\r\n           </View>\r\n           <View style={styles.bottomRight}>\r\n              <Image\r\n              source={require('./assets/appImages/editMode2.png')}\r\n              style={{ width: 300, height: 300}}/>\r\n          </View>\r\n\r\n          {/*Edit board details:*/}\r\n          <Text style={commonStyles.infoText}>שם לוח התקשורת:</Text>\r\n          <TextInput \r\n            style={[commonStyles.inputField]}\r\n            value = {selectedBoard.category}\r\n            onChangeText={(category) => handleCategoryChange(category)}\r\n          />\r\n           <Text style={commonStyles.infoText}>בחר תמונה עבור הלוח:</Text>\r\n                  {/* Edit Board Picture item */}\r\n        <View style={styles.editBoardPictureContainer}>\r\n              <View style={styles.editBoardItem}>\r\n                {selectedBoard.image ? (\r\n                  <Image\r\n                    source={{\r\n                      uri: temp?.uri || `data:${selectedBoard.image.contentType};base64,${Buffer.from(selectedBoard.image.data).toString('base64')}`,\r\n                    }}\r\n                    style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                  />\r\n                ) : null}\r\n              </View>\r\n        </View>\r\n        \r\n        {/****/}\r\n        {/****/}\r\n        {/*Start the bottom icon for edit picture with the pen*/}\r\n        <View>\r\n        <TouchableOpacity onPress={handlePenIconPress}>\r\n              <View style={styles.halfCircle}>\r\n              <Image\r\n                  source={require('./assets/appImages/editPenIcon.png')}\r\n                  style={{ width: 25, height: 35}}/>\r\n              </View>\r\n              </TouchableOpacity>\r\n          </View>\r\n          {/*End of the bottom icon for edit picture with the pen*/}\r\n          {/****/}\r\n          {/****/}\r\n          \r\n          {/*Save button*/}\r\n          <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <TouchableOpacity  onPress={updateBoardDetails}\r\n          style={[styles.saveButton]}>\r\n          <Image\r\n              source={require('./assets/appImages/saveIcon.png')}\r\n              style={{ width: 35, height: 35 ,marginRight: 25 }} />\r\n            <Text style={styles.buttonsText}>\r\n            שמור</Text> \r\n          </TouchableOpacity>\r\n          </View>\r\n          {/*End of Save button*/}\r\n          {/*Go Back button*/}\r\n          <View style={commonStyles.bottomLeft}>\r\n          <TouchableOpacity\r\n            onPress={() => toggleEditSingleBoard()}>\r\n          <Text style={commonStyles.buttonsText}>ביטול</Text>\r\n          <Image\r\n              source={require('./assets/appImages/goBackBtn.png')}\r\n              style={{ width: RFValue(60), height: RFValue(60)}}/>\r\n          </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        {/*End of model container*/}\r\n      </Modal>\r\n        <View>\r\n        {editMode && (\r\n          /* exit Edit mode button */\r\n          <TouchableOpacity\r\n            style={[styles.exitEditMode,]}\r\n            onPress={() => {\r\n              setEditMode(false); // Set editMode to false\r\n              handleEdit(); // Call handleEdit function\r\n            }}>\r\n             <Image source={require('./assets/appImages/exitEditMode.png')}\r\n              style={{ width: RFValue(45), height: RFValue(45), marginTop: RFValue(20), marginLeft: 15}} />\r\n              <Text style={[commonStyles.buttonText, { marginTop: RFValue(20) }]}>יציאה ממצב עריכה</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n        </View>\r\n\r\n\r\n        </View>\r\n        {/*The start of the boards section*/}\r\n        <ScrollView contentContainerStyle={styles.scrollContent}>\r\n        {loading ? (\r\n          <ActivityIndicator size=\"large\" color=\"#0000ff\" />\r\n        ) : (\r\n          <View style={styles.boardContainer}>\r\n            {boards?.length === 0 && !editMode ? (\r\n              <View style={{ flex: 0.96, \r\n              alignItems: 'center', \r\n              justifyContent: 'center' \r\n              , paddingVertical: 150 }}>\r\n              <Text style={styles.notFoundText}>לא קיימים לוחות תקשורת עבור פרופיל זה</Text>\r\n              <Image source={require('./assets/appImages/notFound.png')}\r\n              style={{ width: 200, height: 222}} />\r\n              </View>\r\n            ) : (\r\n              boards?.map((board) => (\r\n                <TouchableOpacity\r\n                  key={board._id}\r\n                  style={[\r\n                    styles.board,\r\n                    editMode && board.isSelected && styles.selectedBoard,\r\n                  ]}\r\n                  onPress={() => handleBoardSelect(board._id)}\r\n                >\r\n                  {board.image && (\r\n                    <Image\r\n                      source={{\r\n                        uri: `data:${board.image.contentType};base64,${Buffer.from(\r\n                          board.image.data\r\n                        ).toString('base64')}`,\r\n                      }}\r\n                      style={styles.boardImage}\r\n                    />\r\n                  )}\r\n                  {editMode && (\r\n                  <View style={styles.checkboxContainer}>\r\n                    <View style={{ transform: [{ scale: 0.32 }] }}>\r\n                      <TouchableOpacity\r\n                      style={[styles.deletedBoardBtn, { borderWidth: 8 }]}\r\n                      onPress={() => handleDeleteBoards(board._id)}>\r\n                      <Text style={styles.deleteBoardText}>x</Text>\r\n                      </TouchableOpacity>\r\n                      </View>\r\n                    </View>\r\n            )}\r\n\r\n            {/*what to do when pressing on the pen icon = edit a single board information*/}\r\n            {editMode && (\r\n                    <View style={[styles.checkboxContainer, { top: RFValue(85), right: RFValue(82), width: 20, height: 20, marginRight: 10 }]}>\r\n                      <View style={{ transform: [{ scale: 0.3 }] }}>\r\n                <TouchableOpacity\r\n                  key={board._id}\r\n                  style={[styles.blankBoard, { borderWidth: 8 ,borderRadius: 80}]}\r\n                  onPress={() => {handleEditSingleBoard(board._id);}}\r\n                >\r\n                   {/*Edit single board*/}\r\n                  <Image\r\n                  source={require('./assets/appImages/editPenIcon.png')}\r\n                  style={{ width: '70%', height: '100%', resizeMode: 'contain' }}\r\n                  />\r\n                   {/*End of edit single board*/}\r\n                </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            )}\r\n                  <View style={styles.buttomOfBoard}>\r\n                  <Text style={styles.categoryText}>{board.category}</Text>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              ))\r\n            )}\r\n          </View>\r\n        )}\r\n        </ScrollView>\r\n        </View>\r\n        {/* end of boards container */}\r\n        </View> \r\n        {/* end of inner container */}\r\n\r\n\r\n        \r\n        \r\n\r\n        <View style={commonStyles.goBackContainer}>\r\n        <TouchableOpacity onPress={goBack}>\r\n          <Image source={require('./assets/appImages/goBackBtn.png')}\r\n                style={commonStyles.goBackButton} />\r\n          <Text style={commonStyles.goBackText}>חזור</Text>\r\n        </TouchableOpacity>\r\n       </View>\r\n  \r\n\r\n        <Modal visible={isModalVisible} animationType=\"slide\" transparent>\r\n          <View style={styles.modalContainer}>\r\n          <Text style={commonStyles.bigTitle}>הוסף לוח תקשורת חדש</Text>\r\n          <View style={commonStyles.topLeft}>\r\n             <Image\r\n              source={require('./assets/appImages/editMode1.png')}\r\n              style={{ width: 200, height: 200}}/>\r\n           </View>\r\n           <View style={commonStyles.bottomRight}>\r\n              <Image\r\n              source={require('./assets/appImages/editMode2.png')}\r\n              style={{ width: 300, height: 300}}/>\r\n          </View>\r\n             <Text style={commonStyles.infoText}>שם לוח התקשורת:</Text>\r\n            <TextInput\r\n              style={commonStyles.inputField}\r\n              value={newBoardName}\r\n              onChangeText={setNewBoardName}\r\n              placeholder=\" הכנס שם לוח\"\r\n            />\r\n  \r\n            {/* Add the image selection UI */}\r\n            <Text style={commonStyles.infoText}>בחר תמונה עבור הלוח:</Text>\r\n            {/*Edit Board Picture item*/}\r\n            <View style={styles.editBoardItem}>\r\n            {newBoardImage && (\r\n              <Image\r\n                source={{ uri: newBoardImage.uri }}\r\n                style={styles.boardImagePreview}\r\n              />\r\n            )}\r\n            </View>\r\n            <View>\r\n            <TouchableOpacity onPress={handleBoardImagePicker}>\r\n              <View style={styles.halfCircle}>\r\n              <Image\r\n                  source={require('./assets/appImages/editPenIcon.png')}\r\n                  style={{ width: 25, height: 35}}/>\r\n              </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n            {/*End of Profile Picture*/}\r\n            {/* End of image selection UI */}\r\n  \r\n          {/*Add button*/}\r\n          <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <TouchableOpacity onPress={handleAddBoard}\r\n          style={[styles.saveButton]}>\r\n          <Image\r\n              source={require('./assets/appImages/saveIcon.png')}\r\n              style={{ width: 35, height: 35 ,marginRight: 25 }} />\r\n            <Text style={styles.buttonsText}>שמור</Text> \r\n          </TouchableOpacity>\r\n          </View>\r\n\r\n            {/*Go Back button*/}\r\n            <View style={commonStyles.bottomLeft}>\r\n              <TouchableOpacity\r\n              onPress={() => {setIsModalVisible(false),setNewBoardName(''),setNewBoardImage('')}}>\r\n                <Text style={commonStyles.buttonsText}>ביטול</Text>\r\n                <Image\r\n                source={require('./assets/appImages/goBackBtn.png')}\r\n                style={{ width: 95, height: 95}}/>\r\n                </TouchableOpacity>\r\n            </View>\r\n            \r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n\r\n  );\r\n};\r\n  \r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'top',\r\n    padding: 10,\r\n    backgroundColor: '#b8e7d3',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  boardContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row-reverse', // Change to 'row' to keep items in a row\r\n    flexWrap: 'wrap',\r\n  },\r\n   // The base of the board , the image and title will add on it\r\n  board: {\r\n    width: RFValue(100),\r\n    height: RFValue(100),\r\n    backgroundColor: 'lightblue',\r\n    margin: RFValue(10),\r\n    borderRadius: 10,\r\n    borderColor: '#B9C4D1', \r\n    marginBottom: RFValue(35),\r\n    marginRight : RFValue(10),\r\n    borderWidth: RFValue(3), // Adds border\r\n  },\r\n  buttomOfBoard: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    width: '100%',\r\n    height: RFPercentage(3),\r\n    backgroundColor: '#6EC5F8',\r\n    borderBottomLeftRadius: 8,  \r\n    borderBottomRightRadius: 8,\r\n  },\r\n  categoryText: {\r\n    fontSize: RFValue(15),\r\n    marginTop: 'auto',  // Set marginTop to 'auto' to push it to the bottom\r\n    textAlign: 'center', \r\n  },\r\n  addButton: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    right: 20,\r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: 'blue',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n  },\r\n  addButtonText: {\r\n    fontSize: 40,\r\n    color: 'white',\r\n  },\r\n  modalContainer: {\r\n    backgroundColor: 'rgba(254, 229, 206,1)',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    marginBottom: 10,\r\n    padding: 15, // Increased padding for more space\r\n    borderWidth: 2, // Increased border width\r\n    borderColor: '#3498db', // Blue color for the border\r\n    borderRadius: 8, // Rounded corners\r\n    fontSize: 16, \r\n    color: '#2c3e50', \r\n  },\r\n  boardImage: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '85%',\r\n    borderTopLeftRadius: RFValue(8),  \r\n    borderTopRightRadius: RFValue(8),  \r\n  },\r\n  boardImagePreview: {\r\n    width: RFValue(106), \r\n    height: RFValue(108),\r\n    borderRadius: RFValue(15),\r\n    marginTop: RFValue(24.5),\r\n    bottom: RFValue(25),\r\n  },\r\n  selectImageText: {\r\n    color: 'blue',\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  editButton: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    right: 100,\r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: '#5EF18A',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n  },\r\n  editButtonText: {\r\n    fontSize: 30,\r\n    color: 'white',\r\n  },\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    right: 180, \r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: 'red',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n  },\r\n  goBackButton: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    bottom: 20,\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n  deleteButtonText: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  checkboxContainer: {\r\n    position: 'absolute',\r\n    top: 2, \r\n    right: -26,\r\n    width: 30,\r\n    height: 30,\r\n    marginRight: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    zIndex: 1, // Set a higher zIndex value to ensure it's on top\r\n  },\r\n  checkbox: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n  },\r\n  checkedCheckbox: {\r\n    backgroundColor: 'blue',\r\n    borderColor: 'blue',\r\n  },\r\n  disabledButton: {\r\n    opacity: 0.5, // Set the opacity for disabled buttons\r\n    backgroundColor: '#CCCCCC', // Set a grey background color for disabled buttons\r\n  },\r\n  scrollContent: {\r\n    paddingBottom: 100, \r\n  },\r\n  goBackText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginTop: 14,\r\n    flexWrap: 'wrap',\r\n    textAlign: 'left',\r\n  },\r\n  blankBoardText: {\r\n    fontSize: RFValue(50),\r\n    color: 'white',\r\n    marginTop: 15,\r\n    fontWeight: 'bold',\r\n  },\r\n  boardName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginTop: 14,\r\n    textAlign: 'right',\r\n    flexWrap: 'wrap',\r\n    textAlign: 'center',\r\n  },\r\n  blankBoard: {\r\n    backgroundColor: 'lightgray', \r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n    marginBottom: RFValue(55),\r\n    marginLeft : RFValue(8),\r\n    marginTop : RFValue(11),\r\n    borderWidth: RFValue(2),\r\n    borderColor: 'white',\r\n    width: RFValue(95),\r\n    height: RFValue(95),\r\n  },\r\n  boardsContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row-reverse', // Change to 'row' to keep items in a row\r\n    flexWrap: 'wrap',\r\n\r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    width: '95%', // Adjust as needed\r\n  },\r\n  deletedBoardBtn: {\r\n    backgroundColor: 'lightgray', \r\n    alignItems: 'center',\r\n    borderRadius: 80,\r\n    marginBottom: RFValue(65),\r\n    marginRight : RFValue(15),\r\n    borderWidth: RFValue(2),\r\n    borderColor: 'white',\r\n    width: RFValue(85),\r\n    height: RFValue(85),\r\n  },\r\n  deleteBoardText: {\r\n    fontSize: RFValue(50),\r\n    color: 'white',\r\n    marginTop: 15,\r\n    fontWeight: 'bold',\r\n  },\r\n  notFoundText: {\r\n    fontWeight: 'bold',\r\n    color: '#A8A5B6',\r\n    fontSize: 34,\r\n    marginBottom: 60,\r\n  },\r\n  editBoardItem: {\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n    borderWidth: RFValue(4), // Adds border\r\n    borderColor: '#FBB8A5', // Set border color to pink\r\n    width: RFValue(112), \r\n    height: RFValue(115),\r\n  },\r\n  blankBoard: {\r\n    backgroundColor: 'lightgray',\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n    borderWidth: RFValue(2),\r\n    borderColor: 'white',\r\n    width: RFValue(100),\r\n    height: RFValue(100),\r\n    margin: RFValue(10),\r\n    alignSelf: 'flex-start',\r\n  },\r\n  buttonsText: {\r\n    fontSize: RFValue(13),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    textAlign: 'right',\r\n    flexWrap: 'wrap',\r\n    textAlign: 'center',\r\n  },\r\n  editBoardPictureContainer: {\r\n    flexDirection: 'row', \r\n    alignItems: 'center',\r\n  },\r\n  topLeft: {\r\n    position: 'absolute',\r\n    top: 100,\r\n    left: 0,\r\n  },\r\n  bottomRight: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  bottomLeft: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    left: 25,\r\n  },\r\n  halfCircle: {//the one with the pencil\r\n    position: 'absolute',\r\n    bottom: RFValue(2.9),\r\n    right: RFValue(-52),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: RFValue(105),\r\n    height: RFValue(36),\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    overflow: 'hidden',\r\n    borderBottomLeftRadius:RFValue(17),  \r\n    borderBottomRightRadius: RFValue(17),\r\n  },\r\n  saveButton: {\r\n    backgroundColor: '#28A745',\r\n    paddingVertical: 10,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width : RFPercentage(16) ,\r\n    borderRadius: 5,\r\n    flexDirection: 'row', \r\n    alignItems: 'center', \r\n    padding: 10,\r\n    marginTop: RFValue(30), \r\n  },\r\n  inputField: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width: '50%',\r\n    height: 40,\r\n    borderColor: '#ccc',\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    marginBottom: 30,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: '#ffffff',\r\n    textAlign :'right',\r\n    fontSize: 21\r\n  },\r\n  exitEditMode: {\r\n    backgroundColor: 'rgba(205, 229, 206, 0.7)',\r\n    alignItems: 'center',\r\n    borderRadius: 80,\r\n    borderWidth: RFValue(2),\r\n    marginHorizontal: RFValue(15),\r\n    borderColor: 'white',\r\n    width: RFValue(85),\r\n    height: RFValue(85),\r\n    marginTop: RFValue(30),   //change this value to change the position of exit mode button\r\n  },\r\n});\r\n\r\nexport default BoardsScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Image, Modal, TextInput, Button, StyleSheet ,ScrollView, TouchableWithoutFeedback  } from 'react-native';\r\nimport axios from 'axios';\r\nimport config from './config';\r\nimport { fetchOfflineData, fetchOnlineData, checkOnlineStatus, handleImagePicker, addAndUploadData } from './utils';\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { RFPercentage, RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nimport { commonStyles } from './CommonStyles';\r\nimport CommonHeader from './CommonHeader';\r\n\r\nconst ProfileSelectionScreen = ({ route, navigation }) => {\r\n  const { teacherId } = route.params;                  //child - list of ids belongs to teacher\r\n  const [child, setChild] = useState('');\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [isSearchMenuVisible, setIsSearchMenuVisible] = useState(false);\r\n  const [isEditSingleProfileVisible, setEditSingleProfileVisible] = useState(false);\r\n  const [newChildUsername, setNewChildUsername] = useState('');\r\n  const [newChildEmail, setNewChildEmail] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState(''); \r\n  const [editMode, setEditMode] = useState(false);\r\n  const [isOnline, setIsOnline] = useState(false);\r\n  const [backgroundColor,setBackgroundColor] = useState('');\r\n  const [screenTouched,setScreenTouched] = useState(false);\r\n  const [selectedProfile, setSelectedProfile] = useState('');\r\n\r\n  const [temp, setTemp] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch initial childIds when the component mounts\r\n    getChildIds(teacherId);\r\n\r\n    //when a new iamge is uploaded to the selected profile in the editing menu, refresh the profile picture \r\n    setSelectedProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      image: {\r\n        uri: temp.uri,\r\n      },\r\n    }));\r\n  }, [temp,toggleScreenTouched]); \r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        //const data = await fetchData(`offlineProfiles`, `${teacherId}`, 'children', { child: child });\r\n        let onlineData;\r\n        const offlineData = await fetchOfflineData(`offlineProfiles`, `${teacherId}`);\r\n\r\n        if (offlineData) {\r\n          const profilesData = offlineData.map((child) => ({\r\n            _id: child._id,\r\n            firstName: child.firstName,\r\n            lastName: child.lastName,\r\n            image: child.image,\r\n          }));\r\n\r\n          setProfiles(prevProfiles => ([...profilesData]));\r\n        }\r\n        await checkOnlineStatus().then((status) => {\r\n          setIsOnline(status);\r\n        });         //Check online status and keep it updated\r\n\r\n        if(isOnline) {\r\n          onlineData = await fetchOnlineData(`offlineProfiles`, `${teacherId}`, 'children', { child: child });\r\n        }\r\n        if (onlineData) {\r\n          const profilesData = onlineData.map((child) => ({\r\n            _id: child._id,\r\n            firstName: child.firstName,\r\n            lastName: child.lastName,\r\n            image: child.image,\r\n          }));\r\n          setProfiles(prevProfiles => ([...profilesData]));\r\n        }\r\n\r\n      } catch (error) {\r\n        console.log('Error fetching profiles:', error);\r\n      }\r\n    })();\r\n  }, [ child , isOnline]);\r\n\r\n\r\n  const getChildIds = async (teacherId) => {\r\n    try {\r\n      const response = await axios.get(`${config.baseUrl}/children/findIds/${teacherId}`);\r\n      setChild(response.data);\r\n      await AsyncStorage.setItem(`childrenIds`, JSON.stringify(response.data));\r\n    } catch (error) {     \r\n      // If cant get children ids from server, use the stored ids (mainly for offline usage)\r\n      const storedChildren = await AsyncStorage.getItem(`childrenIds`);\r\n      setChild(JSON.parse(storedChildren));\r\n    }\r\n  };\r\n  \r\n\r\n  const handleProfileSelect = (profileId) => {\r\n    if (!editMode) {\r\n\r\n    // Save the selected child's image to AsyncStorage to display as profile picture\r\n    const selectedChild = profiles.find((child) => child._id === profileId);\r\n    if (selectedChild && selectedChild.image) {\r\n      AsyncStorage.setItem('profilePicture', JSON.stringify(selectedChild.image.data));\r\n    }\r\n\r\n      navigation.navigate('Boards', { profileId });\r\n      toggleScreenTouched();      // close the settings menu\r\n    } \r\n  };\r\n\r\n\r\n  /*handleEdit - what to change in 'Edit' mode*/\r\n  const handleEdit = () => {\r\n    setEditMode(!editMode);\r\n    setBackgroundColor(editMode ? '#b8e7d3' : '#fee5ce');//Changing background color in edit mode\r\n  };\r\n  \r\n\r\n  const handleSearchChild = () => {\r\n    // Search and add a child \r\n    const formData = new FormData();\r\n    formData.append('username', newChildUsername);\r\n    formData.append('email', newChildEmail);\r\n    formData.append('teacherId', teacherId);\r\n\r\n    // Added to request header to support android \r\n    axios.post(`${config.baseUrl}/addChildId`, formData, { headers: { Accept: 'application/json', 'Content-Type': 'multipart/form-data'}}).then((response) => {\r\n      console.log(\"response status = \",response.status);\r\n      if (response.status === 200) {\r\n        const newChild = response.data.child; // The child found in the search\r\n        // Add the new child to the profiles\r\n        //setProfiles([...profiles, { ...newChild, isSelected: false }]);\r\n        setProfiles(prevProfiles => ([...prevProfiles, newChild]));\r\n\r\n        toggleSearchMenu();\r\n\r\n      }\r\n\r\n    }).catch((error) => {\r\n      console.log(\"error = \",error)\r\n      if (error.response && error.response.status === 400) {\r\n        const errorTxt = 'הילד כבר קיים ברשימה';\r\n        setErrorMessage(errorTxt);\r\n    \r\n        // Show the message for 5 seconds\r\n        setTimeout(() => {setErrorMessage('');}, 5000);\r\n      } else {\r\n        setErrorMessage('שגיאה בהוספת התלמיד למורה. אנא נסה שוב',);\r\n        setTimeout(() => {setErrorMessage('');}, 5000);\r\n      }\r\n    });\r\n  }\r\n    \r\n\r\n  const removeChildFromTeacher = (profileId) => {\r\n    const data = {\r\n      teacherId: teacherId,\r\n      profileIds: [profileId],\r\n    };\r\n    console.log(\"on frontend profileIds to delete: \",profileId);\r\n\r\n  \r\n    axios.delete(`${config.baseUrl}/removeChildFromTeacher/`, { data: data }).then((response) => {\r\n      if (response.status === 200) {\r\n        const updatedProfiles = profiles.filter(profile => profile._id !== profileId);\r\n        // setProfiles(updatedProfiles);\r\n        setProfiles(prevProfiles => ([...updatedProfiles]));\r\n      }\r\n    }).catch((error) => {\r\n      console.error('Error deleting profile:', error);\r\n    });\r\n  };\r\n\r\n  const handleDeleteProfile = async (profileIds) => {\r\n    try {\r\n\r\n      console.log('profileId to delete :', profileIds);\r\n\r\n      const response = await axios.delete(`${config.baseUrl}/deleteChildren`, {\r\n        data: { childrenIds: profileIds } \r\n      });\r\n      // const response = await axios.delete(`${config.baseUrl}/deleteChildren?childrenIds=${profileId}`);\r\n      if (response.status === 200) {\r\n        const updatedProfiles = profiles.filter(profile => !profileIds.includes(profile._id));\r\n        setProfiles(prevProfiles => ([...updatedProfiles]));\r\n      } else {\r\n        console.error('Error deleting profile. Unexpected response:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddProfile = () => {\r\n    toggleSearchMenu();\r\n  };\r\n  const toggleSearchMenu = () => {\r\n    setIsSearchMenuVisible(!isSearchMenuVisible);\r\n  };\r\n\r\n  const handleEditSingleProfile = (profileId) => {\r\n    const selectedProfile = profiles.find((profile) => profile._id === profileId);\r\n    setSelectedProfile(selectedProfile);\r\n    toggleEditSingleProfile();\r\n\r\n  };\r\n  const toggleEditSingleProfile = () => {\r\n    setEditSingleProfileVisible(!isEditSingleProfileVisible);\r\n    setTemp('');\r\n  };\r\n\r\n  // changes the selectedProfile first name \r\n  const handleFirstNameChange = (firstName) => {\r\n    setSelectedProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      firstName: firstName\r\n    }));\r\n  }\r\n    // changes the selectedProfile last name\r\n    const handleLastNameChange = (lastName) => {\r\n      setSelectedProfile((prevProfile) => ({\r\n        ...prevProfile,\r\n        lastName: lastName\r\n      }));\r\n    }\r\n\r\n  // function for hiding the menu when pressing anywhere in the screen\r\n  const toggleScreenTouched = () => {\r\n    setScreenTouched(!screenTouched);\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n  //change the edited profile's profile picture\r\n  const handlePenIconPress = async () => {\r\n    await handleImagePicker(setTemp) \r\n  };\r\n\r\n\r\n  // update the edited profile and save it to the db\r\n  const updateProfileDetails = async () => {\r\n    const formData = new FormData();\r\n    formData.append('_id', selectedProfile._id);\r\n    formData.append('firstName', selectedProfile.firstName);\r\n    formData.append('lastName', selectedProfile.lastName);\r\n\r\n    const response = await addAndUploadData(formData,temp,'profile/update');\r\n    if (response.status === 200) {\r\n      console.log(\"Profile updated successfully\");  \r\n      getChildIds(teacherId);                   //refresh the rendered profiles\r\n      toggleEditSingleProfile();                //close the editing menu\r\n    } else {\r\n      console.error('Error saving profile changes', response.status);\r\n      //add a message showing changes error\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    //Srart of 'container' view\r\n    <View style={[styles.container, { backgroundColor: backgroundColor }]}>\r\n      {/* CommonHeader - the app logo */}\r\n      <CommonHeader showProfilePicture={false} showSettingsIcon={true} handleEdit={handleEdit} screenTouched={screenTouched}/>\r\n      {editMode && (\r\n        <View style={commonStyles.topLeft}>\r\n             <Image\r\n              source={require('./assets/appImages/editMode1.png')}\r\n              style={{ width: 200, height: 200}}/>\r\n        </View>\r\n      )}\r\n       {editMode && (\r\n        <View style={commonStyles.bottomRight}>\r\n              <Image\r\n              source={require('./assets/appImages/editMode2.png')}\r\n              style={{ width: 300, height: 300}}/>\r\n        </View>\r\n      )}\r\n      {editMode && (\r\n      <View style={commonStyles.topCenter}>\r\n        <Image \r\n          source={require('./assets/appImages/editModeIcon.png')}\r\n          style={{ width: 100, height: 100 }}\r\n        />\r\n      </View>\r\n      )}\r\n   \r\n\r\n  \r\n      <Text style={[commonStyles.bigTitle, { textAlign: 'center' }]}>\r\n      {editMode ? 'ערוך פרופילים' : 'בחר פרופיל משתמש'}\r\n      </Text>\r\n      <View style={commonStyles.innerContainer}>\r\n      <View style={styles.profilesContainer}>\r\n      <View style={{ alignItems: 'flex-start'}}>\r\n      <View>\r\n        {editMode && (\r\n          /* Blank profile for adding a new profiles */\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.blankProfile, \r\n            ]}\r\n            onPress={() => handleAddProfile()}>\r\n            <Text style={styles.blankProfileText }>+</Text>\r\n            <Text style={[commonStyles.buttonText, { marginTop: RFValue(20) }]}>הוסף פרופיל חדש</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n        </View>\r\n        <View>\r\n        {editMode && (\r\n          /* exit Edit mode button */\r\n          <TouchableOpacity\r\n            style={[\r\n              commonStyles.exitEditMode,\r\n            ]}\r\n            onPress={() => {\r\n              setEditMode(false); // Set editMode to false\r\n              handleEdit(); // Call handleEdit function\r\n            }}>\r\n             <Image source={require('./assets/appImages/exitEditMode.png')}\r\n              style={{ width: RFValue(50), height: RFValue(50), marginTop: RFValue(20), marginLeft: 15}} />\r\n              <Text style={[commonStyles.buttonText, { marginTop: 35 }]}>יציאה ממצב עריכה</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n        </View>\r\n        </View>\r\n        {/*The start of the profiles section*/}\r\n        <View style={styles.profilesContainer}>\r\n         {/* Profiles rendering */}\r\n        {profiles.map((profile) => (\r\n          <TouchableOpacity\r\n            key={profile._id}\r\n            style={[\r\n              styles.profileItem,\r\n              editMode && styles.selectedProfileItem,\r\n            ]}\r\n            onPress={() => handleProfileSelect(profile._id)}>\r\n            {editMode && (\r\n          <View style={styles.checkboxContainer}>\r\n             <View style={{ transform: [{ scale: 0.35 }] }}>\r\n          <TouchableOpacity\r\n            style={[styles.blankProfile, { borderWidth: 8 }]}\r\n            onPress={() => removeChildFromTeacher(profile._id)}>\r\n               <Text style={styles.blankProfileText }>x</Text>\r\n          </TouchableOpacity>\r\n          </View>\r\n              </View>\r\n            )}\r\n\r\n{\r\n      /*what to do when pressing on the pen icon = edit a single profile information*/\r\n      editMode && (\r\n        <View style={[styles.checkboxContainer, { top: RFValue(67), right: RFValue(49), width: 30, height: 30, marginRight: 10 }]}>\r\n          <View style={{ transform: [{ scale: 0.36 }] }}>\r\n            <TouchableOpacity\r\n            key={profile._id}\r\n              style={[styles.blankProfile, { borderWidth: 8 }]}\r\n              onPress={() => {handleEditSingleProfile(profile._id)}}>\r\n              <Image\r\n                source={require('./assets/appImages/editPenIcon.png')} // Provide the path to your image\r\n                style={{ width: '70%', height: '100%', resizeMode: 'contain' }} // Adjust the style as needed\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      )\r\n    }\r\n          {profile.image && (\r\n            <Image\r\n              source={{\r\n                uri: `data:${profile.image.contentType};base64,${profile.image.data}`,\r\n              }}\r\n              style={styles.profileImage}\r\n            />\r\n          )}\r\n          <Text style={styles.profileName}>\r\n            {profile.firstName} {profile.lastName}\r\n          </Text>\r\n        </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n      </View>\r\n      </View>\r\n      <Modal visible={isSearchMenuVisible} animationType=\"slide\" transparent>\r\n        <View style={styles.modalContainer}>\r\n          <Text style={commonStyles.bigTitle}>חיפוש והוספת פרופיל</Text>\r\n          <View style={commonStyles.topLeft}>\r\n             <Image\r\n              source={require('./assets/appImages/searchLeft.png')}\r\n              style={{ width: 100, height:200}}/>\r\n           </View>\r\n           <View style={commonStyles.bottomRight}>\r\n              <Image\r\n              source={require('./assets/appImages/searchRight.png')}\r\n              style={{ width: 94, height: 230}}/>\r\n          </View>\r\n          <Image\r\n              source={require('./assets/appImages/searchProfile.png')}\r\n              style={{ width: RFValue(90), height: RFValue(80)}}/>\r\n          {/* Add search input fields for child's email or username */}\r\n          <Text style={{...commonStyles.infoText, paddingTop: 40 }}>חיפוש לפי שם משתמש:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"חיפוש לפי שם משתמש\"\r\n            onChangeText={(text) => setNewChildUsername(text)}\r\n          />\r\n            <Text style={commonStyles.infoText}>חיפוש לפי דואר אלקטרוני:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"חיפוש לפי דואר אלקטרוני\"\r\n            onChangeText={(text) => setNewChildEmail(text)}\r\n          />\r\n          {errorMessage !== '' && (\r\n            <Text style={styles.errorText}>{errorMessage}</Text>\r\n          )}\r\n          {/*'Search' button*/}\r\n          <TouchableOpacity onPress={handleSearchChild}\r\n          style={[styles.saveButton, { backgroundColor: '#3EBCFF' }]}>\r\n          <Image\r\n              source={require('./assets/appImages/searchIcon.png')}\r\n              style={{ width: 35, height: 35 ,marginRight: 25}} />\r\n            <Text style={commonStyles.buttonsText}>\r\n            חיפוש</Text> \r\n          </TouchableOpacity>\r\n          {/*End of 'Search' button*/}\r\n          {/*'Go Back' button*/}\r\n          <View style={commonStyles.bottomLeft}>\r\n          <TouchableOpacity\r\n            onPress={() => toggleSearchMenu()}>\r\n          <Text style={commonStyles.buttonsText}>ביטול</Text>\r\n          <Image\r\n              source={require('./assets/appImages/goBackBtn.png')}\r\n              style={{ width: RFValue(60), height: RFValue(60)}}/>\r\n          </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      <Modal visible={isEditSingleProfileVisible} animationType=\"slide\" transparent>\r\n        <View style={styles.modalContainer}>\r\n          <Text style={commonStyles.bigTitle}>ערוך פרופיל משתמש</Text>\r\n          {/*The design of edit single profile view*/}\r\n          <View style={commonStyles.topLeft}>\r\n             <Image\r\n              source={require('./assets/appImages/editMode1.png')}\r\n              style={{ width: 200, height: 200}}/>\r\n           </View>\r\n           <View style={commonStyles.bottomRight}>\r\n              <Image\r\n              source={require('./assets/appImages/editMode2.png')}\r\n              style={{ width: 300, height: 300}}/>\r\n          </View>\r\n         \r\n        {/* Edit Profile Picture item */}\r\n        <View style={styles.editProfilePictureContainer}>\r\n              <View style={styles.editProfileItem}>\r\n                {selectedProfile.image ? (\r\n                  <Image\r\n                    source={{\r\n                      uri: selectedProfile.image.data ? `data:${selectedProfile.image.contentType};base64,${selectedProfile.image.data}` : selectedProfile.image.uri ,\r\n                    }}\r\n                    style={{ width: '100%', height: '100%', borderRadius: 90 }}\r\n                  />\r\n                ) : null}\r\n              </View>\r\n            <TouchableOpacity onPress={handlePenIconPress}>\r\n              <View style={styles.halfCircle}>\r\n                <Image\r\n                  source={require('./assets/appImages/editPenIcon.png')}\r\n                  style={{ width: '70%', height: '70%', resizeMode: 'contain' }}\r\n                  />\r\n              </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n          {/*End of Profile Picture*/}\r\n          {/*Edit child details:*/}\r\n          <Text style={[commonStyles.infoText]}>שם פרטי:</Text>\r\n          <TextInput \r\n            style={[styles.inputField]}\r\n            value = {selectedProfile.firstName}\r\n            onChangeText={(firstName) => handleFirstNameChange(firstName)}\r\n          />\r\n          <Text style={[commonStyles.infoText]}>שם משפחה:</Text>\r\n          <TextInput \r\n            style={[styles.inputField]}\r\n            value = {selectedProfile.lastName}\r\n            onChangeText={(lastName) => handleLastNameChange(lastName)}\r\n          />\r\n          \r\n          {/*Save button*/}\r\n          <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <TouchableOpacity  onPress={updateProfileDetails}\r\n          style={[styles.saveButton]}>\r\n          <Image\r\n              source={require('./assets/appImages/saveIcon.png')}\r\n              style={{ width: 35, height: 35 ,marginRight: 25 }} />\r\n            <Text style={commonStyles.buttonsText}>\r\n            שמור</Text> \r\n          </TouchableOpacity>\r\n          </View>\r\n          {/*End of Save button*/}\r\n          {/*Go Back button*/}\r\n          <View style={commonStyles.bottomLeft}>\r\n          <TouchableOpacity\r\n            onPress={() => toggleEditSingleProfile()}>\r\n          <Text style={commonStyles.buttonsText}>ביטול</Text>\r\n          <Image\r\n              source={require('./assets/appImages/goBackBtn.png')}\r\n              style={{ width: RFValue(60), height: RFValue(60)}}/>\r\n          </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        {/*End of model container*/}\r\n      </Modal>\r\n    </View>\r\n    //end of 'container view\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'top',\r\n    padding: 10,\r\n    backgroundColor: '#b8e7d3',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    width: '95%', // Adjust as needed\r\n  },\r\n  profilesContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row-reverse', // Change to 'row' to keep items in a row\r\n    flexWrap: 'wrap',\r\n  },\r\n  profileItem: {\r\n    alignItems: 'center',\r\n    borderRadius: 80,\r\n    marginBottom: RFValue(65),\r\n    marginRight : RFValue(15),\r\n    borderWidth: RFValue(4), // Adds border\r\n    borderColor: '#FBB8A5', // Set border color to pink\r\n    width: RFValue(85), \r\n    height: RFValue(85),\r\n  },\r\n  editProfilePictureContainer: {\r\n    flexDirection: 'row', \r\n    alignItems: 'center',\r\n\r\n  },\r\n  editProfileItem: {\r\n    alignItems: 'center',\r\n    borderRadius: 90,\r\n    marginBottom: RFValue(65),\r\n    marginRight : RFValue(15),\r\n    borderWidth: RFValue(4), // Adds border\r\n    borderColor: '#FBB8A5', // Set border color to pink\r\n    width: RFValue(112), \r\n    height: RFValue(115),\r\n  },\r\n  halfCircle: {           //the one with the pencil\r\n    position: 'absolute',\r\n    bottom: RFValue(-49),\r\n    right: RFValue(46.6),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: RFValue(50),\r\n    height: RFValue(105),\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    overflow: 'hidden',\r\n    borderTopLeftRadius:180, \r\n    borderBottomLeftRadius:180,\r\n    transform: [{ rotate: '-90deg' }] // Rotate by 90 degrees\r\n  },\r\n  profileImage: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 80,\r\n  },\r\n  profileName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginTop: 14,\r\n    textAlign: 'right',\r\n    flexWrap: 'wrap',\r\n    textAlign: 'center',\r\n  },\r\n  buttonsText: {\r\n    fontSize: RFValue(13),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    textAlign: 'right',\r\n    flexWrap: 'wrap',\r\n    textAlign: 'center',\r\n  },\r\n  addButton: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    right: 20,\r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: 'blue',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n  },\r\n  addButtonText: {\r\n    fontSize: 40,\r\n    color: 'white',\r\n  },\r\n  modalContainer: {\r\n    marginTop: RFValue(50),\r\n    backgroundColor: 'rgba(254, 229, 206,1)',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    marginBottom: 30,\r\n    padding: 15, \r\n    borderWidth: 2, \r\n    borderColor: '#3498db', \r\n    borderRadius: 8, // Rounded corners\r\n    fontSize: 21, \r\n    color: '#2c3e50', \r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n  },\r\n  editButton: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    right: 100,\r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: '#5EF18A',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n  },\r\n  editButtonText: {\r\n    fontSize: 30,\r\n    color: 'white',\r\n  },\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    right: 180, \r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: 'red',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n  },\r\n  \r\n  deleteButtonText: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  checkboxContainer: {\r\n    position: 'absolute',\r\n    top: 9, \r\n    right: -20,\r\n    width: 30,\r\n    height: 30,\r\n    marginRight: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    zIndex: 1, // Set a higher zIndex value to ensure it's on top\r\n  },\r\n  \r\n  checkedCheckbox: {\r\n    backgroundColor: 'blue',\r\n    borderColor: 'blue',\r\n  },\r\n  removeFromTeacherButton: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    right: 250, \r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: 'orange',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n    marginRight: 10, // Add margin to separate buttons\r\n  },\r\n  disabledButton: {\r\n    opacity: 0.5,     // Set the opacity for disabled buttons\r\n    backgroundColor: '#CCCCCC', // Set a grey background color for disabled buttons\r\n  },\r\n  blankProfile: {\r\n    backgroundColor: 'lightgray', \r\n    alignItems: 'center',\r\n    borderRadius: 80,\r\n    marginBottom: RFValue(65),\r\n    marginRight : RFValue(15),\r\n    borderWidth: RFValue(2),\r\n    borderColor: 'white',\r\n    width: RFValue(85),\r\n    height: RFValue(85),\r\n  },\r\n  exitEditMode: {\r\n    backgroundColor: 'rgba(205, 229, 206, 0.7)',\r\n    alignItems: 'center',\r\n    borderRadius: 80,\r\n    marginBottom: RFValue(65),\r\n    marginRight : RFValue(15),\r\n    borderWidth: RFValue(2),\r\n    borderColor: 'white',\r\n    width: RFValue(85),\r\n    height: RFValue(85),\r\n  },\r\n  blankProfileText: {\r\n    fontSize: RFValue(50),\r\n    color: 'white',\r\n    marginTop: 15,\r\n    fontWeight: 'bold',\r\n  },\r\n  topLeft: {\r\n    position: 'absolute',\r\n    top: 100,\r\n    left: 0,\r\n  },\r\n  bottomRight: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  bottomLeft: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    left: 25,\r\n  },\r\n  rowContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between', // or any other alignment you prefer\r\n    alignItems: 'center', // or any other alignment you prefer\r\n  },\r\n  inputField: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width: '50%',\r\n    height: 40,\r\n    borderColor: '#ccc',\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    marginBottom: 30,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: '#ffffff',\r\n    textAlign :'right',\r\n    fontSize: 21\r\n  },\r\n  infoText: {\r\n    textAlign :'right',\r\n    fontSize: 18,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: '#28A745',\r\n    paddingVertical: 10,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width : RFPercentage(16) ,\r\n    borderRadius: 5,\r\n    flexDirection: 'row', \r\n    alignItems: 'center', \r\n    padding: 10,\r\n    marginTop: 30,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default ProfileSelectionScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Modal, TextInput, Button, StyleSheet, Image, ScrollView, ActivityIndicator, FlatList, useWindowDimensions  } from 'react-native';\r\nimport axios from 'axios';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Buffer } from 'buffer';\r\nimport * as Speech from 'expo-speech';\r\nimport config from './config';\r\nimport { handleImagePicker, addAndUploadData, fetchOnlineData, fetchOfflineData, checkOnlineStatus } from './utils';\r\nimport { pictogramSearch, downloadImage, deleteLocalImage,pictogramPartOfSpeech } from './utils';\r\nimport { RFPercentage, RFValue } from \"react-native-responsive-fontsize\";\r\nimport CommonHeader from './CommonHeader';\r\nimport Color from 'color';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { commonStyles } from './CommonStyles';\r\n\r\n\r\n\r\nconst WordsScreen = ({ route }) => {\r\n  const { profileId, boardId } = route.params;\r\n  const [words, setWords] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [newWordText, setNewWordText] = useState('');\r\n  const [newWordImage, setNewWordImage] = useState('');\r\n  const [wordColor, setWordColor] = useState('#FFFFFF');\r\n  const [partOfSpeechTag, setPartOfSpeechTag] = useState('');\r\n  const navigation = useNavigation();\r\n  const [selectedSentence, setSelectedSentence] = useState([]);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [selectedWords, setSelectedWords] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isOnline, setIsOnline] = useState(false);\r\n  const [isColorPickerOpen, setIsColorPickerOpen] = useState(false);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const { width } = useWindowDimensions();\r\n  const numColumns = Math.floor(width / 200); // Number of columns according to screen width\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const goBack = () => {\r\n    navigation.goBack();\r\n  };\r\n  const [backgroundColor,setBackgroundColor] = useState('');\r\n\r\n  const colorPalette = [\r\n    { label: 'Orange', value: '#ff9800' },\r\n    { label: 'Light Yellow', value: '#faeb90' },\r\n    { label: 'Green', value: '#1bde5d' },\r\n    { label: 'Light Pink', value: '#f4a3a0' },\r\n    { label: 'Light Purple', value: '#bdb9de' },\r\n  ];\r\n\r\n\r\n    // Group words by color\r\n  const groupedWords = words.reduce((acc, word) => {\r\n    const colorGroup = acc.find(group => group.color === word.color);\r\n    if (colorGroup) {\r\n      colorGroup.words.push(word);\r\n    } else {\r\n      acc.push({ color: word.color, words: [word] });\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        // change url according to : `${config.baseUrl}/${url}`part\r\n        //const data = await fetchData(`offlineWords`,`${boardId}`, `boards/${boardId}/words`);\r\n\r\n        const offlineData = await fetchOfflineData(`offlineWords`,`${boardId}`);\r\n        let onlineData;\r\n        \r\n        if (offlineData) {\r\n          setLoading(false);\r\n          setWords(offlineData);\r\n        }\r\n        checkOnlineStatus().then((status) => {setIsOnline(status);});         //Check online status and keep it updated\r\n\r\n        if(isOnline)\r\n           onlineData = await fetchOnlineData(`offlineWords`,`${boardId}`, `boards/${boardId}/words`);\r\n        if (onlineData) {\r\n          setLoading(false);\r\n          setWords(onlineData);\r\n        }\r\n      } catch (error) {\r\n        console.log('Error fetching data for board:', error);\r\n      }\r\n    })();\r\n  }, [boardId,isOnline]);\r\n\r\n\r\n  const handleWordPress = (word) => {\r\n    if (!editMode) {\r\n      // TEXT TO SPEECH\r\n      const reversedWord = word.text.split('').reverse().join('');\r\n      console.log('Word pressed:', reversedWord);\r\n      Speech.speak(word.text, { language: 'he', rate: 0.85 });\r\n\r\n      handleAddToSentence(word);\r\n\r\n\r\n    } else {\r\n      const updatedWords = words.map((w) =>\r\n        w._id === word._id ? { ...w, isSelected: !w.isSelected } : w\r\n      );\r\n      setWords(updatedWords);\r\n  \r\n      const selectedWords = updatedWords.filter((w) => w.isSelected);\r\n      setSelectedWords(selectedWords);\r\n    }\r\n  };\r\n\r\n  /*Sentence*/ \r\n  const handleSpeakSentence = () => {\r\n    const sentence = selectedSentence.map((word) => word.text).join(' ');\r\n    Speech.speak(sentence, { language: 'he', rate: 0.7 });\r\n  };\r\n  \r\n  \r\n  const handleAddToSentence = (word) => {\r\n\r\n    setSelectedSentence((prev) => [\r\n      ...prev,\r\n      { text: word.text , index: prev.length},\r\n    ]);\r\n  };\r\n\r\n  const handleRemoveFromSentence = (wordIndex) => {\r\n    const updatedSentence = selectedSentence.filter(\r\n      (word) => word.index !== wordIndex\r\n    );\r\n  \r\n    // update indexes for the remaining words\r\n    const updatedSentenceWithIndexes = updatedSentence.map((word, index) => ({\r\n      ...word,\r\n      index,\r\n    }));\r\n  \r\n    setSelectedSentence(updatedSentenceWithIndexes);\r\n  };\r\n  /*Sentence*/ \r\n\r\n\r\n\r\n\r\n\r\n  const handleWordImagePicker = async () => {\r\n    handleImagePicker(setNewWordImage);\r\n  }\r\n\r\n  const handleAddWord = async () => {\r\n    if (newWordText.trim() !== '') {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('boardId', boardId); \r\n        formData.append('text', newWordText);\r\n        formData.append('color', wordColor);\r\n        //formData.append('partOfSpeech',partOfSpeechTag);\r\n        const response = await addAndUploadData(formData,{ uri: newWordImage },'words');\r\n\r\n        const newWord = response.data;\r\n\r\n        // Delete the local copy of the image\r\n        deleteLocalImage(newWordImage);\r\n  \r\n        setWords([...words, newWord]);\r\n        setNewWordText('');\r\n        setNewWordImage('');\r\n        setWordColor('#FFFFFF')\r\n        setIsModalVisible(false);\r\n      } catch (error) {\r\n        console.log('Error creating word:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  \r\n\r\n\r\n  const handleEdit = () => {\r\n    setEditMode(!editMode);\r\n    setBackgroundColor(editMode ? '#b8e7d3' : '#fee5ce'); \r\n    setSelectedWords([]); // Clear selected words in selected words array when toggling edit mode \r\n    setWords((prevWords) =>\r\n        prevWords.map((word) => ({ ...word, isSelected: false })));// Clear selected words icon when toggling edit mode \r\n\r\n        \r\n    console.log(\"selected words: \",selectedWords);\r\n  };\r\n\r\n  const handleDeleteWords = async (wordsIds) => {\r\n    try {\r\n      console.log('wordIds to delete:', wordsIds);\r\n\r\n      const response = await axios.delete(`${config.baseUrl}/deleteWords`, {\r\n        data: { wordsIds },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const updatedWords = words.filter((word) => !wordsIds.includes(word._id));\r\n        setWords(updatedWords);\r\n        setSelectedWords([]); // Clear selected words after deletion\r\n\r\n        //Save updated words to async storage\r\n        await AsyncStorage.setItem(`offlineWords_${boardId}`,JSON.stringify(updatedWords) );\r\n\r\n      } else {\r\n        console.error('Error deleting words. Unexpected response:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting words:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Search for a matching pictogram\r\n  const handleSearch = async () => {\r\n    const searchResult = await pictogramSearch(newWordText)\r\n    if(searchResult.length > 0)\r\n      setSearchResults(searchResult);\r\n    else {\r\n      //console.error('No pictograms found');\r\n      setErrorMessage('לא נמצאו תמונות עבור החיפוש');\r\n\r\n      setTimeout(() => {\r\n        setErrorMessage('');\r\n      }, 3000);\r\n    }\r\n\r\n\r\n  };\r\n\r\n  const handleClearSentence = () => {\r\n    setSelectedSentence([]);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: backgroundColor }]}>\r\n      <CommonHeader showProfilePicture={true} showSettingsIcon={true} handleEdit={handleEdit}/>\r\n      {/* Sentence Bar and Speaking Icon outside ScrollView */}\r\n      <View style={styles.sentenceAndSpeakContainer}>\r\n        {/* Sentence Bar */}\r\n        <ScrollView\r\n          style={styles.sentenceBar}\r\n          horizontal={true}\r\n          showsHorizontalScrollIndicator={false} //  hides the horizontal scroll indicator\r\n        >\r\n          {selectedSentence.map((word, index) => (\r\n            <TouchableOpacity\r\n              key={word.index}\r\n              style={styles.sentenceWord}\r\n              onPress={() => handleRemoveFromSentence(word.index)}\r\n            >\r\n              <Text style={styles.sentenceWordText}>{word.text}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n          </ScrollView>\r\n          {/* Speaking Icon */}\r\n          <TouchableOpacity\r\n            style={styles.speakSentenceButton}\r\n            onPress={handleSpeakSentence}\r\n          >\r\n          <Text style={{ fontSize: 55 }}>📢 </Text>\r\n        </TouchableOpacity>\r\n\r\n            {/* \"X\" Button */}\r\n        <TouchableOpacity\r\n          style={styles.clearSentenceButton}\r\n          onPress={handleClearSentence}\r\n        >\r\n          \r\n          <Image\r\n              source={require('./assets/appImages/cancel.png')}\r\n              style={{ width: 50, height: 50}}/>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* ScrollView for Words */}\r\n      <ScrollView contentContainerStyle={styles.scrollViewContent}  horizontal={true}>\r\n        {loading ? (\r\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\r\n      ) : (\r\n        <View style={styles.wordsContainer}>\r\n        {groupedWords.map(group => (\r\n          group.words.map(word => (\r\n            <TouchableOpacity\r\n              key={word._id}\r\n              style={[\r\n                styles.wordSquare,\r\n                editMode && word.isSelected && styles.selectedWord,\r\n                {\r\n                  backgroundColor: word.color,\r\n                  borderColor: Color(word.color).darken(0.2).hex(),\r\n                },\r\n              ]}\r\n              onPress={() => handleWordPress(word)}\r\n            >\r\n              {word.image && (\r\n                <Image\r\n                  source={{\r\n                    uri: `data:${word.image.contentType};base64,${Buffer.from(\r\n                      word.image.data\r\n                    ).toString('base64')}`,\r\n                  }}\r\n                  style={styles.wordImage}\r\n                />\r\n              )}\r\n              {editMode && (\r\n                <View style={styles.checkboxContainer}>\r\n                  <View\r\n                    style={[\r\n                      styles.checkbox,\r\n                      word.isSelected && styles.checkedCheckbox,\r\n                    ]}\r\n                  />\r\n                </View>\r\n              )}\r\n              <Text style={styles.wordText}>{word.text}</Text>\r\n            </TouchableOpacity>\r\n          ))\r\n        ))}\r\n      </View>\r\n        )}\r\n      </ScrollView>\r\n\r\n  {/* Edit Mode buttons container */}\r\n  <View style={styles.buttonsContainer}>\r\n  {/* .1. 'Exit Edit Mode' button*/}\r\n  {editMode && (\r\n    <TouchableOpacity\r\n      style={[styles.exitEditButton, !isOnline && styles.disabledButton]}\r\n      onPress={() => setEditMode(false)}>\r\n       <Image source={require('./assets/appImages/exitEditMode.png')}\r\n              style={{ width: RFValue(26), height: RFValue(26), marginTop: RFValue(7),\r\n               marginLeft: RFValue(6), marginBottom: RFValue(8)}} />\r\n        <Text style={[styles.buttonText]}>יציאה ממצב עריכה</Text>\r\n    </TouchableOpacity>\r\n  )}\r\n  {/* .2. 'Add New Word' button*/}\r\n  {editMode && (\r\n    <TouchableOpacity\r\n      style={[styles.addButton, !isOnline && styles.disabledButton]}\r\n      onPress={() => isOnline && setIsModalVisible(true)}>\r\n      <Text style={[styles.addButtonText]}>+</Text>\r\n    </TouchableOpacity>\r\n  )}\r\n\r\n  {/* .3. \"Delete Word\" button */}\r\n  {editMode && selectedWords.length > 0 && (\r\n    <TouchableOpacity\r\n      style={styles.deleteButton}\r\n      onPress={() => handleDeleteWords(selectedWords.map(word => word._id))}\r\n    >\r\n      <Text style={styles.deleteButtonText}>🗑️</Text>\r\n    </TouchableOpacity>\r\n  )}\r\n</View>\r\n\r\n\r\n    <View style={commonStyles.goBackContainer}>\r\n      <TouchableOpacity onPress={goBack}>\r\n        <Image source={require('./assets/appImages/goBackBtn.png')}\r\n              style={commonStyles.goBackButton} />\r\n        <Text style={commonStyles.goBackText}>חזור</Text>\r\n       </TouchableOpacity>\r\n       </View>\r\n\r\n      {/* Modal for Adding New Word */}\r\n      <Modal visible={isModalVisible} animationType=\"slide\" transparent>\r\n      <View style={styles.modalContainer}>\r\n        <Text style={commonStyles.medTitle}>חיפוש תמונה למילה</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          value={newWordText}\r\n          onChangeText={setNewWordText}\r\n          placeholder=\" הכנס מילה לחיפוש\"\r\n          placeholderTextColor=\"gray\" \r\n        />\r\n  \r\n        <TouchableOpacity onPress={handleSearch}\r\n          style={[commonStyles.saveButton, { backgroundColor: '#3EBCFF' }]}>\r\n          <Image\r\n              source={require('./assets/appImages/searchIcon.png')}\r\n              style={{ width: 35, height: 35 ,marginRight: 25}} />\r\n            <Text style={commonStyles.buttonsText}>\r\n            חפש</Text> \r\n          </TouchableOpacity>\r\n\r\n        {/* Display search results */}\r\n        {searchResults?.length > 0 && (\r\n        <FlatList\r\n          style={styles.searchResultsContainer}\r\n          contentContainerStyle={styles.searchResultsContent}\r\n          data={searchResults}\r\n          keyExtractor={(item, index) => index.toString()}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              style={styles.searchResultItem}\r\n              onPress={async() => {\r\n                const id = item.substring(item.lastIndexOf('/') + 1); // Extract ID from the URL\r\n                console.log(\"id = \", id);\r\n                {/* \r\n                setPartOfSpeechTag(await pictogramPartOfSpeech(id));\r\n                */}\r\n\r\n                downloadImage(item).then((uri) => {     \r\n                  setNewWordImage(uri);\r\n                  setSearchResults([]);\r\n                }).catch((error) => {\r\n                  console.error('Error downloading image:', error);\r\n                });\r\n              }}\r\n            >\r\n              <Image\r\n                source={{ uri: item }}\r\n                style={styles.searchResultImage}\r\n              />\r\n            </TouchableOpacity>\r\n          )}\r\n          numColumns={numColumns}  // Set the number of columns in the grid\r\n        />\r\n      )}\r\n\r\n    {/* Add the image selection UI */}\r\n    {newWordImage && (\r\n      <>\r\n        <Image source={{ uri: newWordImage }} style={styles.wordImage} />\r\n        \r\n        <View style={styles.colorPickerContainer}>\r\n        <Text style={styles.colorPickerLabel}>בחר צבע:</Text>\r\n        <View style={styles.colorPicker}>\r\n          {colorPalette.map((colorItem, index) => (\r\n            <TouchableOpacity\r\n              key={index}\r\n              style={[styles.colorPickerOption,\r\n                { backgroundColor: colorItem.value },\r\n                wordColor === colorItem.value && styles.selectedColorOption,\r\n              ]}\r\n              onPress={() => setWordColor(colorItem.value)}\r\n            />\r\n          ))}\r\n        <TouchableOpacity style={[styles.colorPickerOption,\r\n          { backgroundColor: 'white' },\r\n          wordColor === '#FFFFFF' && styles.selectedColorOption]}\r\n          onPress={() => setWordColor('#FFFFFF')}>\r\n          <Text style={{ textAlign: 'center', fontSize: 20 ,paddingTop: 10 }}>\r\n          ללא צבע\r\n          </Text>\r\n          </TouchableOpacity>\r\n\r\n        </View>\r\n        <TouchableOpacity onPress={handleAddWord} style={[styles.saveButton]}>\r\n          <Image source={require('./assets/appImages/plusIcon.png')}\r\n          style={{ width: 35, height: 35 ,marginRight: 8}} />\r\n          <Text style={commonStyles.buttonsText}>הוסף מילה</Text> \r\n        </TouchableOpacity>\r\n      </View>\r\n        \r\n      </>\r\n    )}\r\n    {/* End of image selection UI */}\r\n\r\n\r\n   {/*Go Back button*/}\r\n   <View style={commonStyles.bottomLeft}>\r\n    <TouchableOpacity\r\n            onPress={() => {\r\n              setSearchResults([]); // Clear the search results\r\n              setNewWordText(''); // Clear the input field\r\n              setNewWordImage('');\r\n              setIsModalVisible(false);\r\n              deleteLocalImage(newWordImage);\r\n        }}>\r\n        <Text style={[commonStyles.buttonsText]}>ביטול</Text>\r\n          <Image\r\n              source={require('./assets/appImages/goBackBtn.png')}\r\n              style={{ width: RFValue(60), height: RFValue(60)}}/>\r\n          </TouchableOpacity>\r\n    </View>\r\n    {errorMessage  ? (\r\n      <Text style={styles.errorMessageText}>{errorMessage}</Text>\r\n    ) : null}\r\n      </View>\r\n    </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n    marginBottom: 20,  // Add marginBottom to create space at the bottom\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    alignSelf: 'center',  //Center the \"my words\"\r\n\r\n  },\r\n  searchPictogramTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    alignSelf: 'center',  \r\n  },\r\n  scrollViewContent: {\r\n    //direction: 'rtl',           //render the words squares from right to left\r\n    flexDirection: 'row-reverse',\r\n    flexGrow: 1,\r\n  },\r\n  wordsContainer: {\r\n    flexDirection: 'column',\r\n    flexWrap: 'wrap',\r\n    marginTop: 10,  // Add marginTop to create space at the top\r\n    direction: 'rtl',   // Add next colum on the left of this column\r\n    writingDirection: 'rtl', \r\n\r\n  },\r\n  wordImage: {\r\n    width: RFValue(55),\r\n    height: RFValue(55),\r\n    resizeMode: 'cover',\r\n    borderRadius: 10,\r\n    marginTop: 23,\r\n  },\r\n  wordSquare: {\r\n    width: RFValue(77),\r\n    height: RFValue(77),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    margin: 2,\r\n    borderRadius: 20,\r\n    borderWidth: 4,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 2, height: 2 },\r\n    shadowOpacity: 0.5,\r\n    shadowRadius: 2,\r\n    elevation: 2, // This property is for Android shadow\r\n    alignSelf: 'flex-end', // Align each word square to the right\r\n\r\n  },\r\n  \r\n  wordText: {\r\n    //fontSize: 28,\r\n    fontSize: RFValue(17),\r\n    paddingBottom: 18,\r\n  },\r\n  addButton: {\r\n    backgroundColor: 'lightgray',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 80,\r\n    borderWidth: RFValue(1),\r\n    borderColor: 'white',\r\n    width: RFValue(43),\r\n    height: RFValue(43),\r\n    marginLeft: RFValue(7),\r\n  },\r\n  exitEditButton: {\r\n    backgroundColor: 'rgba(205, 229, 206, 0.7)',\r\n    alignItems: 'center',\r\n    borderRadius: 80,\r\n    borderWidth: RFValue(2),\r\n    borderColor: 'white',\r\n    width: RFValue(43),\r\n    height: RFValue(43),\r\n    marginLeft: RFValue(7),\r\n  },\r\n  addButtonText: {\r\n    fontSize: 40,\r\n    color: 'white',\r\n  },\r\n  modalContainer: {\r\n    backgroundColor: 'rgba(254, 229, 206, 0.93)', // Use an off-white color with some transparency\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    marginBottom: 30,\r\n    padding: 15, \r\n    borderWidth: 2, \r\n    borderColor: '#3498db', \r\n    borderRadius: 8, // Rounded corners\r\n    fontSize: 21, \r\n    color: '#2c3e50', \r\n  },\r\n  \r\n  selectImageText: {\r\n    color: 'blue',\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  editButton: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    right: 100,\r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: '#5EF18A',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n    marginBottom: -20, // moves the button down\r\n\r\n  },\r\n  editButtonText: {\r\n    fontSize: 30,\r\n    color: 'white',\r\n  },\r\n  deleteButton: {\r\n    backgroundColor: 'rgba(255, 0, 0, 0.7)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 80,\r\n    borderWidth: RFValue(1),\r\n    borderColor: 'white',\r\n    width: RFValue(43),\r\n    height: RFValue(43),\r\n\r\n  },\r\n  \r\n  deleteButtonText: {\r\n    fontSize: 36,\r\n    color: 'white',\r\n  },\r\n  checkboxContainer: {\r\n    position: 'absolute',\r\n    top: 5,\r\n    right: 5,\r\n    backgroundColor: 'white',\r\n    borderRadius: 5,\r\n    padding: 5,\r\n  },\r\n  checkbox: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n  },\r\n  checkedCheckbox: {\r\n    backgroundColor: '#4169E1',\r\n    borderColor: '#008080',\r\n  },\r\n  sentenceAndSpeakContainer: {\r\n    flexDirection: 'row-reverse',\r\n    minHeight: 50,\r\n    //marginBottom: 5,\r\n    justifyContent: 'space-between',\r\n  },\r\n  sentenceBar: {\r\n    writingDirection: 'rtl', \r\n    direction: 'rtl',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    minHeight: 50,\r\n    flexGrow: 1,\r\n                            //  FLIPPED BETWEEN IOS AND ANDROID!!\r\n    marginRight: RFValue(37),        // Add space between speaker icon and sentence\r\n    marginLeft: 50,        // Add space between X and bar\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 2, height: 2 },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 2,\r\n    elevation: 30, // This property is for Android shadow\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    borderColor: 'gray',\r\n  },\r\n  speakSentenceButton: {\r\n    backgroundColor: '#a09db2',\r\n    borderRadius: 8,\r\n    width: 65,\r\n    height: 65,\r\n    marginLeft: 'auto', // Push the speaker button to the left\r\n    marginRight: 0,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  \r\n  sentenceWord: {\r\n    backgroundColor: '#E0E0E0',\r\n    padding: 8,\r\n    margin: 4,\r\n    borderRadius: 8,\r\n    fontSize: 24,\r\n  },\r\n  sentenceWordText: {\r\n    fontSize: 24,\r\n  },\r\n  disabledButton: {\r\n    opacity: 0.5, // Set the opacity for disabled buttons\r\n    backgroundColor: '#CCCCCC', // Set a grey background color for disabled buttons\r\n  },\r\n\r\n  searchResultsContainer: {\r\n    marginTop: 10,\r\n  },\r\n\r\n  searchResultItem: {\r\n    margin: 5,\r\n  },\r\n  searchResultImage: {\r\n    width: 200,\r\n    height: 200,\r\n    resizeMode: 'cover',\r\n    borderRadius: 10,\r\n  },\r\n  searchResultsContent: {\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  colorPicker: {\r\n    textAlign: 'right',\r\n    width: 200,\r\n    height: 40,\r\n    alignSelf: 'center', // Center the picker horizontally\r\n    marginBottom: 10,\r\n  },\r\n  errorMessageText: {\r\n    color: 'red',\r\n    fontSize: 16,\r\n  },\r\n  colorPaletteContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 10,\r\n  },\r\n  colorButton: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n  },\r\n  colorPickerContainer: {\r\n    marginBottom: 10,\r\n  },\r\n  colorPickerLabel: {\r\n    fontSize: 20,\r\n    textAlign: 'right',\r\n  },\r\n  colorPicker: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 5,\r\n  },\r\n  colorPickerOption: {\r\n    width: 70,\r\n    height: 70,\r\n    borderRadius: 20,\r\n    borderWidth: 3,\r\n    borderColor: '#FFF',\r\n    marginHorizontal: 5,\r\n  },\r\n  selectedColorOption: {\r\n    borderWidth: 3,\r\n    borderColor: '#3498db', // Highlight color for the selected option\r\n  },\r\n  clearSentenceButton: {\r\n    backgroundColor: 'red',\r\n    borderRadius: 8,\r\n    width: RFValue(25),\r\n    height: RFValue(25),\r\n    marginTop: 10,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: 'row-reverse',\r\n    paddingHorizontal: 3, // Adjust as needed\r\n    marginBottom: RFValue(4), // Adjust as needed\r\n  },\r\n  buttonText: {\r\n    fontSize: RFValue(10),\r\n    fontWeight: 'bold',\r\n    color: '#2F2F2F',\r\n  },\r\n  addButtonText: {\r\n    fontSize: RFValue(16),\r\n    fontWeight: 'bold',\r\n    color: '#2F2F2F',\r\n  },\r\n  saveButton: {\r\n    backgroundColor: '#28A745',\r\n    paddingVertical: 10,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width : RFPercentage(16) ,\r\n    borderRadius: 5,\r\n    flexDirection: 'row', \r\n    alignItems: 'center', \r\n    padding: 10,\r\n    marginTop: RFValue(40), \r\n    marginBottom: RFValue(20), \r\n  },\r\n  \r\n});\r\n\r\nexport default WordsScreen;\r\n\r\n\r\n","import React from 'react';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport LoginScreen from './LoginScreen';\r\nimport RegisterScreen from './RegisterScreen';\r\nimport Boards from './BoardsScreen';\r\nimport Profiles from './ProfileSelectionScreen'\r\nimport WordsScreen from './WordsScreen'; // Update the path to your WordsScreen\r\nimport { View, Text, StatusBar, LogBox  } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n//import 'react-native-gesture-handler';\r\n\r\n//Ignore warnings about expo-speech\r\nLogBox.ignoreLogs(['Sending `Exponent.speakingWillSayNextString` with no listeners registered.',\r\n                   '`new NativeEventEmitter()` was called with a non-null argument without the required `addListener` method.',\r\n                  '`new NativeEventEmitter()` was called with a non-null argument without the required `removeListeners` method.',\r\n                'Sending `Exponent.speakingStarted` with no listeners registered.',\r\n                'Sending `Exponent.speakingWillSayNextString` with no listeners registered.',\r\n                'Sending `Exponent.speakingDone` with no listeners registered.'\r\n              ]);\r\nconst Stack = createNativeStackNavigator();\r\n\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      {/* Hide the status bar */}\r\n      <StatusBar hidden={true} />\r\n      <NavigationContainer>\r\n        <Stack.Navigator\r\n          initialRouteName=\"Loading\"\r\n          screenOptions={{\r\n            contentStyle: { backgroundColor: '#b8e7d3' }, // background color\r\n            gestureEnabled: false,\r\n          }}\r\n        >\r\n          <Stack.Screen name=\"Loading\" component={LoadingScreen} />\r\n          <Stack.Screen name=\"Login\" component={LoginScreen} options={{ headerShown: false }} />\r\n          <Stack.Screen name=\"Boards\" component={Boards} options={{ headerShown: false }} />\r\n          <Stack.Screen name=\"Profiles\" component={Profiles} options={{ headerShown: false }} />\r\n          <Stack.Screen name=\"Register\" component={RegisterScreen} options={{ headerShown: false }} />\r\n          <Stack.Screen name=\"Words\" component={WordsScreen} options={{ title: 'מילים', headerShown: false }} />\r\n          {/* add more screens here */}\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [298], () => (__webpack_require__(2820)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["baseUrl","pictogramBaseURL","checkOnlineStatus","_ref","_asyncToGenerator","NetInfo","isConnected","apply","arguments","checkLastLogin","_ref2","navigation","lastLoginInfoString","AsyncStorage","getItem","lastLoginInfo","JSON","parse","storedToken","undefined","userType","navigate","teacherId","child","profileId","console","log","error","_x","handleImagePicker","_ref3","setFunc","result","ImagePicker","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","quality","canceled","assets","_x2","addAndUploadData","_ref4","formData","newImage","url","uri","localUri","ImageManipulator","manipulateAsync","resize","width","compress","format","PNG","filename","split","pop","type","append","name","axios","post","config","headers","_x3","_x4","_x5","fetchOfflineData","_ref5","key","parentTypeId","res","_x6","_x7","fetchOnlineData","_ref6","params","length","get","data","setItem","stringify","_x8","_x9","_x10","fetchPictogramsIds","_ref7","searchText","pictogramsIds","encodeURIComponent","map","item","_id","_x11","pictogramSearch","_ref8","text","trim","pictogramIds","id","_x12","downloadImage","_ref9","partOfSpeechTag","tags","find","tag","includes","_ref10","imageUrl","FileSystem","downloadAsync","documentDirectory","Date","now","readAsStringAsync","encoding","Base64","_x14","deleteLocalImage","_ref11","imageUri","startsWith","deleteAsync","_x15","useNavigation","useEffect","checkLoginAndNavigate","_jsxs","View","style","flex","justifyContent","alignItems","children","_jsx","ActivityIndicator","size","color","Text","commonStyles","StyleSheet","create","container","padding","backgroundColor","innerContainer","bigTitle","paddingTop","fontSize","marginBottom","medTitle","goBackButton","position","left","bottom","height","goBackText","fontWeight","marginTop","flexWrap","textAlign","goBackContainer","maxWidth","topLeft","top","topCenter","bottomRight","right","bottomLeft","exitEditMode","borderRadius","RFValue","marginRight","borderWidth","borderColor","buttonsText","infoText","inputField","marginLeft","paddingHorizontal","saveButton","paddingVertical","RFPercentage","flexDirection","buttonText","styles","profileContainer","overflow","profilePicture","source","Image","resizeMode","headerStyles","logoContainer","logo","menuItem","alignSelf","menuContainer","elevation","menuItemText","profilePictureIcon","_ref$showProfilePictu","showProfilePicture","_ref$showSettingsIcon","showSettingsIcon","_ref$handleEdit","handleEdit","screenTouched","_useState","useState","_useState2","_slicedToArray","setProfilePicture","_useState3","_useState4","menuVisible","setMenuVisible","_useState5","_useState6","setLastLoginInfo","_useState7","_useState8","settingsMenuVisible","setSettingsMenuVisible","signOut","enterEditMode","_useState9","_useState10","menuItems","setMenuItems","changeProfile","fetchProfilePicture","storedProfilePictureString","storedProfilePicture","set","Set","concat","_toConsumableArray","Array","from","handleTouchablePress","handleMenuItemPress","keys","getAllKeys","multiRemove","TouchableWithoutFeedback","onPress","ProfilePicture","TouchableOpacity","require","marginHorizontal","FlatList","slice","reverse","renderItem","keyExtractor","loginStyles","inputUsername","inputPassword","button","errorMessage","logoImg","fixedImageLeft","fixedImageRight","username","setUsername","password","setPassword","invalidLoginMessage","setInvalidLoginMessage","isOnline","setIsOnline","then","status","handleLogin","user","token","userResponse","teacherIdResponse","setTimeout","CommonHeader","TextInput","placeholder","value","onChangeText","autoCapitalize","secureTextEntry","registrationStyles","registrationMessage","checkboxContainer","cancelButton","cancelButtonText","registrationLogo","zIndex","scrollContainer","flexGrow","paddingBottom","selectProfileImageText","uploadedImageContainer","email","setEmail","setUserType","setRegistrationMessage","_useState11","_useState12","firstName","setFirstName","_useState13","_useState14","lastName","setLastName","_useState15","_useState16","newProfileImage","setNewProfileImage","handleProfileImagePicker","handleRegistration","test","FormData","response","catch","message","ScrollView","contentContainerStyle","paddingRight","CheckBox","title","checked","containerStyle","_Fragment","goBack","boardContainer","board","margin","buttomOfBoard","borderBottomLeftRadius","borderBottomRightRadius","categoryText","addButton","addButtonText","modalContainer","input","boardImage","borderTopLeftRadius","borderTopRightRadius","boardImagePreview","selectImageText","editButton","editButtonText","deleteButton","deleteButtonText","checkbox","checkedCheckbox","disabledButton","opacity","scrollContent","blankBoardText","boardName","blankBoard","boardsContainer","deletedBoardBtn","deleteBoardText","notFoundText","editBoardItem","editBoardPictureContainer","halfCircle","route","boards","setBoards","isModalVisible","setIsModalVisible","newBoardName","setNewBoardName","newBoardImage","setNewBoardImage","editMode","setEditMode","loading","setLoading","setBackgroundColor","_useState17","_useState18","setScreenTouched","_useState19","_useState20","isEditSingleBoardVisible","setEditSingleBoardVisible","_useState21","_useState22","selectedBoard","setSelectedBoard","_useState23","_useState24","temp","setTemp","fetchBoardsData","onlineData","offlineData","handleBoardSelect","boardId","updatedBoards","_objectSpread","isSelected","selectedBoards","filter","setSelectedBoards","storageKey","_JSON$parse","words","updatedWords","toggleScreenTouched","handleBoardImagePicker","handleAddBoard","newBoard","handleDeleteBoards","boardsIds","delete","updateBoardDetails","category","toggleEditSingleBoard","handlePenIconPress","Modal","visible","animationType","transparent","prevBoard","handleCategoryChange","image","contentType","Buffer","toString","transform","scale","handleEditSingleBoard","profilesContainer","profileItem","editProfilePictureContainer","editProfileItem","rotate","profileImage","profileName","modalTitle","errorText","removeFromTeacherButton","blankProfile","blankProfileText","rowContainer","setChild","profiles","setProfiles","isSearchMenuVisible","setIsSearchMenuVisible","isEditSingleProfileVisible","setEditSingleProfileVisible","newChildUsername","setNewChildUsername","newChildEmail","setNewChildEmail","setErrorMessage","selectedProfile","setSelectedProfile","_useState25","_useState26","getChildIds","prevProfile","profilesData","prevProfiles","storedChildren","toggleSearchMenu","profileIds","childrenIds","updatedProfiles","profile","toggleEditSingleProfile","updateProfileDetails","selectedProfileItem","selectedChild","handleProfileSelect","removeChildFromTeacher","handleEditSingleProfile","Accept","newChild","handleFirstNameChange","handleLastNameChange","searchPictogramTitle","scrollViewContent","wordsContainer","direction","writingDirection","wordImage","wordSquare","shadowColor","shadowOffset","shadowOpacity","shadowRadius","wordText","exitEditButton","sentenceAndSpeakContainer","minHeight","sentenceBar","speakSentenceButton","sentenceWord","sentenceWordText","searchResultsContainer","searchResultItem","searchResultImage","searchResultsContent","colorPicker","errorMessageText","colorPaletteContainer","colorButton","colorPickerContainer","colorPickerLabel","colorPickerOption","selectedColorOption","clearSentenceButton","buttonsContainer","_route$params","setWords","newWordText","setNewWordText","newWordImage","setNewWordImage","wordColor","setWordColor","selectedSentence","setSelectedSentence","selectedWords","setSelectedWords","searchResults","setSearchResults","useWindowDimensions","numColumns","Math","floor","_useState27","_useState28","_useState29","_useState30","groupedWords","reduce","acc","word","colorGroup","group","push","handleAddToSentence","prev","index","handleAddWord","newWord","handleDeleteWords","wordsIds","handleSearch","searchResult","prevWords","horizontal","showsHorizontalScrollIndicator","wordIndex","updatedSentenceWithIndexes","handleRemoveFromSentence","sentence","join","Speech","speak","language","rate","selectedWord","Color","darken","hex","w","reversedWord","handleWordPress","placeholderTextColor","substring","lastIndexOf","label","colorItem","LogBox","ignoreLogs","Stack","createNativeStackNavigator","StatusBar","hidden","NavigationContainer","Navigator","initialRouteName","screenOptions","contentStyle","gestureEnabled","Screen","component","LoadingScreen","LoginScreen","options","headerShown","Boards","Profiles","RegisterScreen","WordsScreen","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}